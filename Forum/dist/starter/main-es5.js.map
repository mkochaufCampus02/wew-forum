{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/entries/entries.component.ts","webpack:///src/app/dashboard/entries/entries.component.html","webpack:///src/app/dashboard/entry-form/entry-form.component.ts","webpack:///src/app/dashboard/entry-form/entry-form.component.html","webpack:///src/app/dashboard/single-entry/single-entry.component.ts","webpack:///src/app/dashboard/single-entry/single-entry.component.html","webpack:///src/app/entry-detail/comment-form/comment-form.component.ts","webpack:///src/app/entry-detail/comment-form/comment-form.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.ts","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.module.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login/login.component.ts","webpack:///src/app/login/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/services/appstate.service.ts","webpack:///src/app/services/defaultforum.service.ts","webpack:///src/app/services/entry.service.ts","webpack:///src/app/services/forum.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardModule","title","text","creator","EntriesComponent","forumSerivce","appstateService","Entries","IsUserLoggedIn","IsAddEntryPopupShown","IsEditEntryPopupShown","EntryToEdit","ReadEntries","getEntries","subscribe","entries","closePopup","event","find","x","EntryFormComponent","forumService","EntrySaved","user","GetUser","undefined","newEntry","userName","creatorId","upateEntry","test","console","log","next","addEntry","save","SingleEntryComponent","appStateService","EntryDeleted","EntryEdit","IsSameUser","deleteEntry","CommentFormComponent","entryService","CommentSaved","newComment","entry","upateComment","addComment","EntryDetailComponent","route","IsAddCommentPopupShown","IsEditCommentPopupShown","CommentToEdit","Comments","paramMap","params","Number","get","getComment","comments","ReadComments","EntryDetailModule","SingleCommentComponent","CommentDeleted","CommentEdit","deleteComment","LoginModule","LoginComponent","userService","router","navigate","set","username","password","getUser","users","length","error","showErrorDiv","clearErrorDiv","SetUser","errResp","getParams","addUser","document","getElementById","getElementsByTagName","innerHTML","classList","add","message","remove","signInUser","registerUser","NavbarComponent","isUserLoggedIn","UserName","sidebarVisible","userLoggedInSubscription","unsubscribe","UserChanged","value","body","AppstateService","UserBehavior","getValue","userId","name","providedIn","DefaultForumService","http","BaseUrl","url","headers","put","post","EntryService","comment","ForumService","useClass","UserService","newUser","SettingsComponent","passwordNew","passwordNew2","showMessageDiv","curUser","updateUser","elementId","doClearDiv","hideMessageDiv","changePassword","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { EntriesComponent } from './dashboard/entries/entries.component';\r\nimport { EntryDetailComponent } from './entry-detail/entry-detail/entry-detail.component';\r\nimport { LoginComponent } from './login/login/login.component';\r\nimport {SettingsComponent} from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntriesComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'entry/:id',\r\n    component: EntryDetailComponent\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-flight',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n}\r\n","<div class=\"wrapper\">\r\n\r\n  <div class=\"main-panel\">\r\n      <app-navbar-cmp></app-navbar-cmp>\r\n\r\n      <router-outlet>\r\n\r\n      </router-outlet>\r\n  </div>\r\n\r\n</div>\r\n","import { NavbarComponent } from './navbar/navbar.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport {DashboardModule} from './dashboard/dashboard.module';\r\nimport {LoginModule} from './login/login.module';\r\nimport {EntryDetailModule} from './entry-detail/entry-detail/entry-detail.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\n\r\n@NgModule({\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      DashboardModule,\r\n      LoginModule,\r\n      EntryDetailModule,\r\n      AppRoutingModule\r\n   ],\r\n   declarations: [\r\n      AppComponent,\r\n      NavbarComponent,\r\n      SettingsComponent\r\n   ],\r\n   providers: [],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntriesComponent } from './entries/entries.component';\r\nimport { SingleEntryComponent } from './single-entry/single-entry.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EntryFormComponent } from './entry-form/entry-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EntriesComponent,\r\n    SingleEntryComponent,\r\n    EntryFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    EntriesComponent,\r\n    SingleEntryComponent,\r\n    EntryFormComponent,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport {Entry} from '../../entities/entry';\r\nimport {ForumService} from '../../services/forum.service'\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AppstateService } from 'src/app/services/appstate.service';\r\nimport { User } from 'src/app/entities/user';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-entries',\r\n  templateUrl: './entries.component.html',\r\n  styleUrls: ['./entries.component.css']\r\n})\r\nexport class EntriesComponent implements OnInit {\r\n\r\n    public Entries: Array<Entry> = [];\r\n\r\n    public IsUserLoggedIn: boolean = false;\r\n\r\n    public IsAddEntryPopupShown = false;\r\n    public IsEditEntryPopupShown = false;\r\n    public EntryToEdit:Entry= null;\r\n\r\n    constructor(private forumSerivce: ForumService, private appstateService: AppstateService) {\r\n    }\r\n\r\n    ngOnInit(): void { \r\n      this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public showAddEntry()\r\n    {\r\n      if(!this.IsAddEntryPopupShown)\r\n      {\r\n        this.IsAddEntryPopupShown = true;\r\n      }\r\n    }\r\n\r\n    private ReadEntries()\r\n    {\r\n      this.forumSerivce.getEntries().subscribe((entries) => {\r\n        this.Entries = entries;\r\n      })\r\n    }\r\n\r\n    public closePopup()\r\n    {\r\n      if(this.IsAddEntryPopupShown)\r\n      {\r\n        this.IsAddEntryPopupShown = false;\r\n      }\r\n\r\n      if(this.IsEditEntryPopupShown)\r\n      {\r\n        this.IsEditEntryPopupShown = false;\r\n      }\r\n    }\r\n\r\n    public entrySaved()\r\n    {\r\n      this.closePopup();\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public entryDeleted()\r\n    {\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public editEntry(event){\r\n\r\n      this.EntryToEdit = this.Entries.find(x=> x.id == event);\r\n      this.IsEditEntryPopupShown = true;\r\n    }\r\n\r\n}\r\n","<div class=\"card\">\r\n\r\n    <div class=\"header-table header\">\r\n        <table style=\"width: 100%;\">\r\n            <tr>\r\n                <td>\r\n                    <h2 class=\"title\">Forum-Einträge</h2>\r\n                </td>\r\n                <td *ngIf=\"IsUserLoggedIn == true\" align=\"right\">\r\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddEntry()\" value=\"Eintrag hinzufügen\">\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    \r\n    <div>\r\n        \r\n    </div>\r\n\r\n    <div class=\"card enty-container\">\r\n        <app-single-entry class=\"col-md-3 col-sm-3 col-lg-4\"\r\n        *ngFor=\"let e of Entries\"\r\n        title=\"{{e.title}}\"\r\n        text=\"{{e.text}}\"\r\n        creator=\"{{e.creator}}\"\r\n        id=\"{{e.id}}\"\r\n        (deleted)=\"entryDeleted()\"\r\n        (openEdit)=\"editEntry($event)\"\r\n        ></app-single-entry>\r\n    </div>\r\n\r\n\r\n    <div class=\"popup\" *ngIf=\"IsAddEntryPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <entry-form\r\n            (saved)=\"entrySaved()\"\r\n            ></entry-form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" *ngIf=\"IsEditEntryPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <entry-form\r\n                id=\"{{EntryToEdit.id}}\"\r\n                title=\"{{EntryToEdit.title}}\"\r\n                text=\"{{EntryToEdit.text}}\"\r\n            (saved)=\"entrySaved()\"\r\n            ></entry-form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Entry } from 'src/app/entities/entry';\r\nimport { User } from 'src/app/entities/user';\r\nimport { AppstateService } from 'src/app/services/appstate.service';\r\nimport { ForumService } from 'src/app/services/forum.service';\r\n\r\n\r\n@Component({\r\n  selector: 'entry-form',\r\n  templateUrl: './entry-form.component.html',\r\n  styleUrls: ['./entry-form.component.css']\r\n})\r\nexport class EntryFormComponent implements OnInit {\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Input(\"title\")\r\n  public title: string;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Output(\"saved\") EntrySaved = new EventEmitter();\r\n\r\n  constructor(private forumService: ForumService, private appstateService: AppstateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public save()\r\n  {\r\n    const user: User = this.appstateService.GetUser();\r\n    if(this.id !== null && this.id !== undefined)\r\n    {\r\n      const newEntry: Entry = {\r\n        id:this.id,\r\n        title: this.title,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n      this.forumService.upateEntry(newEntry).subscribe((test)=> {\r\n        console.log(test);\r\n        this.EntrySaved.next(newEntry);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      const newEntry: Entry = {\r\n        id:null,\r\n        title: this.title,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n  \r\n      this.forumService.addEntry(newEntry).subscribe((test)=> {\r\n        console.log(test);\r\n        this.EntrySaved.next(newEntry);\r\n      });\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n}\r\n","<h2 style=\"margin-top: 0px;\">Neuen Eintrag hinzufügen</h2>\r\n\r\n<form #form=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label>Titel:</label>\r\n        <input [(ngModel)]=\"title\" name=\"title\" class=\"entry-input form-control\" type=\"text\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <label>Text:</label>\r\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\"></textarea>\r\n    </div>\r\n\r\n    <button\r\n        [disabled]=\"!title || !text\"\r\n        (click)=\"save()\"\r\n        class=\"btn btn-default\">Speichern</button>\r\n</form>\r\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { User } from 'src/app/entities/user';\r\nimport { AppstateService } from 'src/app/services/appstate.service';\r\nimport { ForumService } from 'src/app/services/forum.service';\r\n\r\n@Component({\r\n  selector: 'app-single-entry',\r\n  templateUrl: './single-entry.component.html',\r\n  styleUrls: ['./single-entry.component.css']\r\n})\r\nexport class SingleEntryComponent implements OnInit {\r\n\r\n  @Input(\"title\")\r\n  public title: string;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Input(\"creator\")\r\n  public creator: string;\r\n\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Output(\"deleted\") EntryDeleted = new EventEmitter();\r\n\r\n  @Output(\"openEdit\") EntryEdit = new EventEmitter<number>();\r\n\r\n  public IsSameUser: boolean;\r\n\r\n  constructor(private appStateService: AppstateService, private forumService: ForumService) { }\r\n\r\n  ngOnInit(): void {\r\n    const user: User = this.appStateService.GetUser();\r\n    this.IsSameUser = user !== null && user.userName === this.creator;\r\n  }\r\n\r\n  public deleteEntry()\r\n  {\r\n    this.forumService.deleteEntry(this.id).subscribe((test)=> {\r\n      console.log(test);\r\n      this.EntryDeleted.next();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  public editEntry()\r\n  {\r\n    this.EntryEdit.next(this.id);\r\n  }\r\n\r\n  /*@HostListener('window:resize')\r\n  windowSizeChanged()\r\n  {\r\n    var card = document.getElementById(\"single-card\");\r\n    this.footerWidth = card.offsetWidth+\"px;\";\r\n    console.log(this.footerWidth);\r\n  }*/\r\n\r\n}\r\n\r\n","<div class=\"single-card\" id=\"single-card\">\r\n    <a [routerLink]=\"['/entry',id]\">\r\n    <div>\r\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\r\n    </div>\r\n    <div style=\"color:#666666;\"> \r\n        {{text}}\r\n    </div>\r\n    </a>\r\n    <div class=\"single-entry-footer\" id=\"single-footer\">\r\n        <div class=\"created\">\r\n            Erstellt von: {{creator}}\r\n        </div>\r\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteEntry()\">\r\n            <i class=\"ti-trash\"></i>\r\n        </div>\r\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editEntry()\">\r\n            <i class=\"ti-pencil-alt\"></i>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AppstateService } from 'src/app/services/appstate.service';\nimport { User } from 'src/app/entities/user';\nimport { EntryService } from 'src/app/services/entry.service';\nimport { Comment } from 'src/app/entities/comment';\n\n@Component({\n  selector: 'comment-form',\n  templateUrl: './comment-form.component.html',\n  styleUrls: ['./comment-form.component.css']\n})\nexport class CommentFormComponent implements OnInit {\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Output(\"saved\") CommentSaved = new EventEmitter();\n\n  constructor(private appstateService: AppstateService, private entryService: EntryService) { }\n\n  ngOnInit(): void {\n  }\n\n  public save()\n  {\n    const user: User = this.appstateService.GetUser();\n    if(this.id !== null && this.id !== undefined)\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id: this.id,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n      this.entryService.upateComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }\n    else\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id:null,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n  \n      this.entryService.addComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }    \n  }\n}\n","<h2 style=\"margin-top: 0px;\">Kommentar hinzufügen</h2>\n\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label>Text:</label>\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\"></textarea>\n    </div>\n\n    <button\n        [disabled]=\"!text\"\n        (click)=\"save()\"\n        class=\"btn btn-default\">Speichern</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppstateService } from 'src/app/services/appstate.service';\r\nimport { EntryService } from '../../services/entry.service'\r\nimport { Comment } from '../../entities/comment';\r\n\r\n@Component({\r\n  selector: 'app-entry-detail',\r\n  templateUrl: './entry-detail.component.html',\r\n  styleUrls: ['./entry-detail.component.css']\r\n})\r\nexport class EntryDetailComponent implements OnInit {\r\n\r\n  private id: number;\r\n  public IsUserLoggedIn: boolean = false;\r\n  public IsAddCommentPopupShown: boolean = false;\r\n  public IsEditCommentPopupShown: boolean = false;\r\n  public CommentToEdit:Comment= null;\r\n\r\n  public Comments: Array<Comment> = [];\r\n\r\n  constructor(private route: ActivatedRoute, private appstateService: AppstateService, private entryService: EntryService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.paramMap.subscribe(\r\n      params => {\r\n        this.id = Number(params.get('id'));\r\n        console.log(this.id);\r\n      }\r\n    );\r\n\r\n    this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\r\n    \r\n  }\r\n\r\n  public showAddComment()\r\n  {\r\n    if(!this.IsAddCommentPopupShown)\r\n    {\r\n      this.IsAddCommentPopupShown = true;\r\n    }\r\n  }\r\n\r\n  private ReadComments()\r\n  {\r\n    this.entryService.getComment().subscribe((comments) => {\r\n      this.Comments = comments;\r\n    })\r\n  }\r\n\r\n  public closePopup()\r\n  {\r\n    if(this.IsAddCommentPopupShown)\r\n    {\r\n      this.IsAddCommentPopupShown = false;\r\n    }\r\n\r\n    if(this.IsEditCommentPopupShown)\r\n    {\r\n      this.IsEditCommentPopupShown = false;\r\n    }\r\n  }\r\n\r\n  public commentSaved()\r\n  {\r\n    this.closePopup();\r\n    this.ReadComments();\r\n  }\r\n\r\n  public commentDeleted()\r\n    {\r\n      this.ReadComments();\r\n    }\r\n\r\n    public editComment(event){\r\n\r\n      this.CommentToEdit = this.Comments.find(x=> x.id == event);\r\n      this.IsEditCommentPopupShown = true;\r\n    }\r\n\r\n}\r\n","<p>Titel und Text vom Eintrag</p>\r\n\r\n\r\n<div class=\"card\">\r\n\r\n    <div class=\"header-table header\">\r\n        <table style=\"width: 100%;\">\r\n            <tr>\r\n                <td>\r\n                    <h3 class=\"title\">Kommentare</h3>\r\n                </td>\r\n                <td align=\"right\" *ngIf=\"IsUserLoggedIn == true\" >\r\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddComment()\" value=\"Kommentar hinzufügen\">\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    \r\n    <div>\r\n        \r\n    </div>\r\n\r\n    <div class=\"card enty-container\">\r\n        <app-single-comment class=\"col-md-3 col-sm-3 col-lg-4\"\r\n        *ngFor=\"let c of Comments\"\r\n        text=\"{{c.text}}\"\r\n        creator=\"{{c.creator}}\"\r\n        id=\"{{c.id}}\"\r\n        (deleted)=\"commentDeleted()\"\r\n        (openEdit)=\"editComment($event)\"\r\n        ></app-single-comment>\r\n    </div>\r\n\r\n\r\n    <div class=\"popup\" *ngIf=\"IsAddCommentPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <comment-form  \r\n            (saved)=\"commentSaved()\"     \r\n            ></comment-form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" *ngIf=\"IsEditCommentPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <comment-form\r\n                id=\"{{CommentToEdit.id}}\"\r\n                text=\"{{CommentToEdit.text}}\"\r\n            (saved)=\"commentSaved()\"\r\n            ></comment-form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntryDetailComponent } from './entry-detail.component';\r\nimport { CommentFormComponent } from '../comment-form/comment-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SingleCommentComponent } from '../single-comment/single-comment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EntryDetailComponent, \r\n    CommentFormComponent,\r\n    SingleCommentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    EntryDetailComponent,\r\n    CommentFormComponent,\r\n    FormsModule,\r\n    SingleCommentComponent\r\n  ]\r\n})\r\nexport class EntryDetailModule { }","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { User } from 'src/app/entities/user';\nimport { AppstateService } from 'src/app/services/appstate.service';\nimport { EntryService } from 'src/app/services/entry.service';\n\n@Component({\n  selector: 'app-single-comment',\n  templateUrl: './single-comment.component.html',\n  styleUrls: ['./single-comment.component.css']\n})\nexport class SingleCommentComponent implements OnInit {\n\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Output(\"deleted\") CommentDeleted = new EventEmitter();\n\n  @Output(\"openEdit\") CommentEdit = new EventEmitter<number>();\n\n  public IsSameUser: boolean;\n\n  constructor(private appStateService: AppstateService, private entryService: EntryService) { }\n\n  ngOnInit(): void {\n    const user: User = this.appStateService.GetUser();\n    this.IsSameUser = user !== null && user.userName === this.creator;\n  }\n\n  public deleteComment()\n  {\n    this.entryService.deleteComment(this.id).subscribe((test)=> {\n      console.log(test);\n      this.CommentDeleted.next();\n    });\n\n\n  }\n\n  public editComment()\n  {\n    this.CommentEdit.next(this.id);\n  }\n\n}\n","<div class=\"single-card\" id=\"single-card\">\n    <!-- <a [routerLink]=\"['/entry',id]\"> -->\n    <div style=\"color:#666666;\"> \n        {{text}}\n    </div>\n    <!--</a> -->\n    <div class=\"single-entry-footer\" id=\"single-footer\">\n        <div class=\"created\">\n            Erstellt von: {{creator}}\n        </div>\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteComment()\">\n            <i class=\"ti-trash\"></i>\n        </div>\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editComment()\">\n            <i class=\"ti-pencil-alt\"></i>\n        </div>\n    </div>\n    \n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n\r\n  ],\r\n  imports: [\r\n      CommonModule,\r\n      FormsModule\r\n  ],\r\n  exports: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppstateService } from 'src/app/services/appstate.service';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../../entities/userResponse';\r\nimport {UserService} from '../../services/user.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appstateService.IsUserLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  signInUser(): void {\r\n    const params = new HttpParams()\r\n      .set('username', this.username)\r\n      .set('password', this.password);\r\n\r\n    this.userService.getUser(params)\r\n      .subscribe(\r\n        (users: UserResponse[]) => {\r\n          // If user is not found show error message\r\n          if (users.length === 0) {\r\n            console.error('No user found');\r\n            this.showErrorDiv('User / Password combination not found');\r\n            return;\r\n          }\r\n\r\n          this.clearErrorDiv();\r\n          // Set user information in appstateService\r\n          this.appstateService.SetUser(users[0].id, users[0].username);\r\n          this.router.navigate(['/']);\r\n        },\r\n        (errResp) => {\r\n          console.error('Error loading user', errResp);\r\n        });\r\n  }\r\n\r\n  registerUser(): void {\r\n    const getParams = new HttpParams()\r\n      .set('username', this.username);\r\n\r\n    this.userService.getUser(getParams)\r\n      .subscribe(\r\n        (users: UserResponse[]) => {\r\n          // If user with same username is found, show error message\r\n          if (users.length > 0) {\r\n            console.error('Username already in use');\r\n            this.showErrorDiv('Username already in use');\r\n            return;\r\n          }\r\n\r\n          this.userService.addUser(this.username, this.password)\r\n            .subscribe(\r\n              (user: UserResponse) => {\r\n                this.clearErrorDiv();\r\n                // Set user information in appstateService\r\n                this.appstateService.SetUser(user.id, user.username);\r\n\r\n                this.router.navigate(['/']);\r\n              },\r\n              (errResp) => {\r\n                console.error('Error creating user', errResp);\r\n              });\r\n        },\r\n        (errResp) => {\r\n          console.error('Error loading user', errResp);\r\n        });\r\n  }\r\n\r\n  clearErrorDiv(): void {\r\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = '';\r\n    document.getElementById('errorDiv').classList.add('hidden');\r\n  }\r\n\r\n  showErrorDiv(message: string): void {\r\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = message;\r\n    document.getElementById('errorDiv').classList.remove('hidden');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <form #form=\"ngForm\" >\r\n    <h2>Please sign in</h2>\r\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\r\n    <input type=\"text\" id=\"inputUsername\" name=\"inputUsername\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\r\n    <div *ngIf=\"form?.controls['inputUsername']?.invalid && (form?.controls['inputUsername']?.dirty || form?.controls['inputUsername']?.touched)\"\r\n         class=\"alert alert-danger\">\r\n      <div *ngIf=\"form?.controls['inputUsername']?.errors.required\">\r\n        Username is required.\r\n      </div>\r\n    </div>\r\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n    <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" [(ngModel)]=\"password\"  class=\"form-control\" placeholder=\"Password\" required=\"\">\r\n    <div *ngIf=\"form?.controls['inputPassword']?.invalid && (form?.controls['inputPassword']?.dirty || form?.controls['inputPassword']?.touched)\"\r\n         class=\"alert alert-danger\">\r\n      <div *ngIf=\"form?.controls['inputPassword']?.errors.required\">\r\n        Password is required.\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"errorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"clearErrorDiv()\">&times;</span></button>\r\n      <p>User / Password combination not found</p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"signInUser()\"\r\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Sign in</button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"registerUser()\"\r\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Register</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from '../entities/user';\r\nimport {AppstateService} from '../services/appstate.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-navbar-cmp',\r\n    templateUrl: 'navbar.component.html'\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(public appstateService: AppstateService, private router: Router)\r\n    {\r\n\r\n    }\r\n\r\n    public isUserLoggedIn = false;\r\n    public UserName = '';\r\n\r\n    private userLoggedInSubscription: Subscription;\r\n    private sidebarVisible = false;\r\n\r\n    ngOnDestroy(): void {\r\n        this.userLoggedInSubscription.unsubscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.userLoggedInSubscription = this.appstateService.UserChanged.subscribe((value: User) => {\r\n            this.isUserLoggedIn = value !== null && value.id !== 0;\r\n            this.UserName = value.userName;\r\n        });\r\n    }\r\n\r\n    sidebarToggle(): void {\r\n        const body = document.getElementsByTagName('body')[0];\r\n\r\n        if (this.sidebarVisible === false) {\r\n            body.classList.add('nav-open');\r\n            this.sidebarVisible = true;\r\n        } else {\r\n            this.sidebarVisible = false;\r\n            body.classList.remove('nav-open');\r\n        }\r\n    }\r\n\r\n    logOutUser(): void {\r\n      this.appstateService.SetUser(0, null);\r\n      this.router.navigate(['/login']);\r\n    }\r\n}\r\n","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" routerLink=\"/\">StackUnderStop</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li *ngIf=\"isUserLoggedIn === false\">\r\n                    <a routerLink=\"/login\">\r\n                        <i class=\"ti-user\"></i>\r\n                        <p>Login/Register</p>\r\n                    </a>\r\n                </li>\r\n                <li *ngIf=\"isUserLoggedIn === true\" class=\"dropdown\">\r\n                  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ti-user\"></i> Hallo {{UserName}} <span class=\"caret\"></span></a>\r\n                  <ul class=\"dropdown-menu\">\r\n                    <li><a routerLink=\"/settings\">Settings</a></li>\r\n                    <li><a (click)=\"logOutUser()\">Log out</a></li>\r\n                  </ul>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n</nav>\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {User} from '../entities/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppstateService {\r\n\r\n  public UserChanged = new EventEmitter();\r\n\r\n  private readonly UserBehavior = new BehaviorSubject<User>(null);\r\n\r\n  constructor() { }\r\n\r\n  public IsUserLoggedIn(): boolean\r\n  {\r\n    const user: User = this.GetUser();\r\n    return user !== null && user.id !== 0;\r\n  }\r\n\r\n  public GetUser(): User\r\n  {\r\n    return this.UserBehavior.getValue();\r\n  }\r\n\r\n  public SetUser(userId: number, name: string): void {\r\n    const value: User = {\r\n      id : userId,\r\n      userName : name\r\n    };\r\n    this.UserBehavior.next(value);\r\n    this.UserChanged.next(value);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entry } from '../entities/entry';\r\nimport { ForumService } from './forum.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DefaultForumService implements ForumService {\r\n  private BaseUrl:string = \"http://localhost:3000/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n  upateEntry(entry: Entry): Observable<object> {\r\n    let url = this.BaseUrl+'entries/'+entry.id;\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.put(url, entry,{headers});\r\n  }\r\n  addEntry(entry: Entry): Observable<object> {\r\n    let url = this.BaseUrl+'entries';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.post(url, entry,{headers});\r\n  }\r\n\r\n  getEntries(): Observable<Entry[]> {\r\n    let url = this.BaseUrl+'entries';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<Entry[]>(url, {headers});\r\n  }\r\n\r\n  deleteEntry(id:number): Observable<object>\r\n  {\r\n    let url = this.BaseUrl+\"entries/\"+id;\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.delete(url, {headers});\r\n  }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Comment } from '../entities/comment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntryService {\n  private BaseUrl:string = \"http://localhost:3000/entry\";\n\n  constructor(private http: HttpClient) { }\n  upateComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'entries/'+comment.id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.put(url, comment,{headers});\n  }\n  addComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, comment,{headers});\n  }\n\n  getComment(): Observable<Comment[]> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Comment[]>(url, {headers});\n  }\n\n  deleteComment(id:number): Observable<object>\n  {\n    let url = this.BaseUrl+\"entries/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entry } from '../entities/entry';\r\nimport {DefaultForumService} from './defaultforum.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useClass: DefaultForumService\r\n})\r\nexport abstract class ForumService {\r\n\r\n  constructor() { }\r\n\r\n  abstract getEntries(): Observable<Entry[]>;\r\n\r\n  abstract addEntry(entry: Entry): Observable<object>;\r\n  \r\n  abstract upateEntry(entry: Entry): Observable<object>;\r\n\r\n  abstract deleteEntry(id:number): Observable<object>;\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../entities/userResponse';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  url: string;\r\n  headers: HttpHeaders;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.url = 'http://localhost:3000/users';\r\n  }\r\n\r\n\r\n  getUser(params: HttpParams): Observable<UserResponse[]> {\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<UserResponse[]>(this.url, {headers, params});\r\n  }\r\n\r\n  addUser(username: string, password: string): Observable<UserResponse> {\r\n    const newUser = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    return this.http.post<UserResponse>(this.url, newUser);\r\n  }\r\n\r\n  updateUser(userId: number, params: HttpParams): Observable<UserResponse>  {\r\n    return this.http.put<UserResponse>(this.url + '/' + userId, params);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AppstateService} from '../services/appstate.service';\r\nimport {UserService} from '../services/user.service';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../entities/user';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../entities/userResponse';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  passwordNew: string;\r\n  passwordNew2: string;\r\n\r\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.appstateService.IsUserLoggedIn()) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n    // Check if both password values match\r\n    if (this.passwordNew !== this.passwordNew2) {\r\n      this.showMessageDiv('passwordErrorDiv', 'The two password values must match');\r\n      return;\r\n    }\r\n\r\n    const curUser = this.appstateService.GetUser();\r\n\r\n    const params = new HttpParams()\r\n      .set('username', curUser.userName)\r\n      .set('password', this.passwordNew);\r\n\r\n    this.userService.updateUser(curUser.id, params)\r\n      .subscribe(\r\n        (user: UserResponse) => {\r\n          this.showMessageDiv('passwordSuccessDiv');\r\n          console.log(user);\r\n        },\r\n        (errResp) => {\r\n          console.error('Error creating user', errResp);\r\n        });\r\n  }\r\n\r\n  hideMessageDiv(elementId: string, doClearDiv: boolean = false): void {\r\n    if (doClearDiv){\r\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = '';\r\n    }\r\n    document.getElementById(elementId).classList.add('hidden');\r\n  }\r\n\r\n  showMessageDiv(elementId: string, message: string = null): void {\r\n    if (message) {\r\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = message;\r\n    }\r\n    document.getElementById(elementId).classList.remove('hidden');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2>Settings</h2>\r\n\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">Password</div>\r\n    <div class=\"panel-body\">\r\n      <form #form=\"ngForm\" >\r\n        <label for=\"inputNewPassword\" class=\"sr-only\">Username</label>\r\n        <input type=\"password\" id=\"inputNewPassword\" name=\"inputNewPassword\" [(ngModel)]=\"passwordNew\" class=\"form-control\" placeholder=\"New password\" required=\"\" autofocus=\"\">\r\n        <label for=\"inputNewPassword2\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"inputNewPassword2\" name=\"inputNewPassword2\" [(ngModel)]=\"passwordNew2\" class=\"form-control\" placeholder=\"Repeat new password\" required=\"\">\r\n        <div id=\"passwordErrorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordErrorDiv', true)\">&times;</span></button>\r\n          <p>User / Password combination not found</p>\r\n        </div>\r\n        <div id=\"passwordSuccessDiv\" class=\"alert alert-success hidden\" role=\"alert\">\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordSuccessDiv')\">&times;</span></button>\r\n          <p>Password successfully updated</p>\r\n        </div>\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"changePassword()\"\r\n                [disabled]=\"form?.controls['inputNewPassword']?.invalid || form?.controls['inputNewPassword2']?.invalid\">Change password</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}