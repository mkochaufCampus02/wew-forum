{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/entries/entries.component.ts","webpack:///src/app/dashboard/entries/entries.component.html","webpack:///src/app/dashboard/entry-form/entry-form.component.ts","webpack:///src/app/dashboard/entry-form/entry-form.component.html","webpack:///src/app/dashboard/single-entry/single-entry.component.ts","webpack:///src/app/dashboard/single-entry/single-entry.component.html","webpack:///src/app/entry-detail/comment-form/comment-form.component.ts","webpack:///src/app/entry-detail/comment-form/comment-form.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.ts","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.module.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login/login.component.ts","webpack:///src/app/login/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/app/shared/services/appstate.service.ts","webpack:///src/app/shared/services/defaultforum.service.ts","webpack:///src/app/shared/services/entry.service.ts","webpack:///src/app/shared/services/forum.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validation/censorship-validator.directive.ts","webpack:///src/app/shared/validation/censorship_comment-validator.directive.ts","webpack:///src/app/shared/validation/new-password.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardModule","title","text","creator","EntriesComponent","forumSerivce","appstateService","ReadOnlyEntities","Entries","IsUserLoggedIn","IsAddEntryPopupShown","IsEditEntryPopupShown","EntryToEdit","searchTerm","searchTermSubscription","unsubscribe","valueChanges","pipe","subscribe","x","searchForEntries","ReadEntries","console","log","getEntries","entries","closePopup","event","find","EntryFormComponent","forumService","EntrySaved","user","GetUser","undefined","newEntry","userName","creatorId","upateEntry","test","next","addEntry","save","SingleEntryComponent","appStateService","EntryDeleted","EntryEdit","IsSameUser","deleteEntry","CommentFormComponent","entryService","route","CommentSaved","paramMap","params","entry","Number","get","newComment","upateComment","addComment","EntryDetailComponent","IsAddCommentPopupShown","IsEditCommentPopupShown","CommentToEdit","Comments","entry_id","forEach","obj","child","ReadComments","getComment","comments","EntryDetailModule","SingleCommentComponent","CommentDeleted","CommentLike","CommentEdit","IsLiked","likes","IsUser","getLike","like","getLikesAll","deleteComment","newLike","comment","likeComment","unlikeComment","LoginModule","LoginComponent","userService","router","navigate","set","username","password","getUser","users","length","error","showErrorDiv","clearErrorDiv","SetUser","errResp","getParams","addUser","document","getElementById","getElementsByTagName","innerHTML","classList","add","message","remove","signInUser","registerUser","NavbarComponent","isUserLoggedIn","UserName","sidebarVisible","userLoggedInSubscription","UserChanged","value","body","SettingsComponent","deletionState","passwordNew","passwordNew2","showMessageDiv","curUser","updateUser","deleteUser","elementId","doClearDiv","hideMessageDiv","changePassword","AppstateService","UserBehavior","getValue","userId","name","providedIn","DefaultForumService","http","BaseUrl","url","headers","put","post","EntryService","user_id","commend_id","ForumService","useClass","UserService","newUser","SharedModule","CensorshipValidatorDirective","control","getBlacklistedItems","response","hasError","i","includes","fn","provide","useExisting","multi","CensorshipCommentValidatorDirective","NewPasswordDirective","c","validCities","indexOf","city","actualValue","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { EntriesComponent } from './dashboard/entries/entries.component';\nimport { EntryDetailComponent } from './entry-detail/entry-detail/entry-detail.component';\nimport { LoginComponent } from './login/login/login.component';\nimport {SettingsComponent} from './settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EntriesComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'entry/:id',\n    component: EntryDetailComponent\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n}\n","<div class=\"wrapper\">\n\n  <div class=\"main-panel\">\n      <app-navbar-cmp></app-navbar-cmp>\n\n      <router-outlet>\n\n      </router-outlet>\n  </div>\n\n</div>\n","import { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {LoginModule} from './login/login.module';\nimport {EntryDetailModule} from './entry-detail/entry-detail/entry-detail.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsComponent } from './settings/settings.component';\nimport {SharedModule} from './shared/shared.module';\n\n\n@NgModule({\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      DashboardModule,\n      LoginModule,\n      EntryDetailModule,\n      AppRoutingModule,\n      SharedModule\n   ],\n   declarations: [\n      AppComponent,\n      NavbarComponent,\n      SettingsComponent\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EntriesComponent } from './entries/entries.component';\nimport { SingleEntryComponent } from './single-entry/single-entry.component';\nimport { RouterModule } from '@angular/router';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    EntriesComponent,\n    SingleEntryComponent,\n    EntryFormComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    EntriesComponent,\n    SingleEntryComponent,\n    EntryFormComponent,\n    FormsModule\n  ]\n})\nexport class DashboardModule { }\n","import {Entry} from '../../shared/entities/entry';\nimport {ForumService} from '../../shared/services/forum.service'\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounce, debounceTime } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-entries',\n  templateUrl: './entries.component.html',\n  styleUrls: ['./entries.component.css']\n})\nexport class EntriesComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    private ReadOnlyEntities: Array<Entry> = [];\n    public Entries: Array<Entry> = [];\n\n    public IsUserLoggedIn: boolean = false;\n\n    public IsAddEntryPopupShown = false;\n    public IsEditEntryPopupShown = false;\n    public EntryToEdit:Entry= null;\n\n    public searchTerm = new FormControl();\n\n    private searchTermSubscription: Subscription;\n\n    constructor(private forumSerivce: ForumService, private appstateService: AppstateService) {\n    }\n    ngOnDestroy(): void {\n      this.searchTermSubscription.unsubscribe();\n    }\n    ngAfterViewInit(): void {\n      this.searchTermSubscription = this.searchTerm.valueChanges.pipe(\n        debounceTime(600)\n      ).subscribe(x=> this.searchForEntries(x))\n    }\n\n    ngOnInit(): void { \n      this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\n      this.ReadEntries();\n    }\n\n    public showAddEntry()\n    {\n      if(!this.IsAddEntryPopupShown)\n      {\n        this.IsAddEntryPopupShown = true;\n      }\n    }\n\n    private searchForEntries(x:any)\n    {\n      console.log(x);\n      //this.Entries = this.ReadOnlyEntities.filter(x=> x.title.includes(this.searchTerm));\n    }\n\n    private ReadEntries()\n    {\n      this.forumSerivce.getEntries().subscribe((entries) => {\n        this.Entries = entries;\n        this.ReadOnlyEntities = entries;\n      })\n    }\n\n    public closePopup()\n    {\n      if(this.IsAddEntryPopupShown)\n      {\n        this.IsAddEntryPopupShown = false;\n      }\n\n      if(this.IsEditEntryPopupShown)\n      {\n        this.IsEditEntryPopupShown = false;\n      }\n    }\n\n    public entrySaved()\n    {\n      this.closePopup();\n      this.ReadEntries();\n    }\n\n    public entryDeleted()\n    {\n      this.ReadEntries();\n    }\n\n    public editEntry(event){\n\n      this.EntryToEdit = this.Entries.find(x=> x.id == event);\n      this.IsEditEntryPopupShown = true;\n    }\n\n}\n","<div class=\"card\">\n\n    <div class=\"header-table header\">\n        <table style=\"width: 100%;\">\n            <tr>\n                <td>\n                    <h2 class=\"title\">Forum-Einträge</h2>\n                </td>\n                <td *ngIf=\"IsUserLoggedIn == true\" align=\"right\">\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddEntry()\" value=\"Eintrag hinzufügen\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n\n    <div class=\"card enty-container\">\n        <div class=\"search\">\n            <input [formControl]=\"searchTerm\" name=\"searchTerm\" class=\"form-control search-input\" placeholder=\"Suchen\">\n            <br>\n        </div>\n        <div *ngIf=\"Entries.length === 0\">\n            Leider wurden keine Ergebnisse gefunden!\n        </div>\n        <single-entry class=\"col-md-4 col-sm-4 col-lg-4 col-xs-6\"\n        *ngFor=\"let e of Entries\"\n        title=\"{{e.title}}\"\n        text=\"{{e.text}}\"\n        creator=\"{{e.creator}}\"\n        id=\"{{e.id}}\"\n        (deleted)=\"entryDeleted()\"\n        (openEdit)=\"editEntry($event)\"\n        ></single-entry>\n    </div>\n\n\n    <div class=\"popup\" *ngIf=\"IsAddEntryPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <entry-form\n            (saved)=\"entrySaved()\"\n            ></entry-form>\n        </div>\n    </div>\n\n    <div class=\"popup\" *ngIf=\"IsEditEntryPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <entry-form\n                id=\"{{EntryToEdit.id}}\"\n                title=\"{{EntryToEdit.title}}\"\n                text=\"{{EntryToEdit.text}}\"\n            (saved)=\"entrySaved()\"\n            ></entry-form>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { CensorshipValidatorDirective } from 'src/app/shared/validation/censorship-validator.directive';\nimport { Entry } from '../../shared/entities/entry';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { ForumService } from '../../shared/services/forum.service';\n\n\n@Component({\n  selector: 'entry-form',\n  templateUrl: './entry-form.component.html',\n  styleUrls: ['./entry-form.component.css']\n})\nexport class EntryFormComponent implements OnInit {\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"title\")\n  public title;\n\n  @Input(\"text\")\n  public text;\n\n  @Output(\"saved\") EntrySaved = new EventEmitter();\n\n  constructor(private forumService: ForumService, private appstateService: AppstateService) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  public save()\n  {\n    const user: User = this.appstateService.GetUser();\n    if(this.id !== null && this.id !== undefined)\n    {\n      const newEntry: Entry = {\n        id:this.id,\n        title: this.title,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n      this.forumService.upateEntry(newEntry).subscribe((test)=> {\n        console.log(test);\n        this.EntrySaved.next(newEntry);\n      });\n    }\n    else\n    {\n      const newEntry: Entry = {\n        id:null,\n        title: this.title,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n  \n      this.forumService.addEntry(newEntry).subscribe((test)=> {\n        console.log(test);\n        this.EntrySaved.next(newEntry);\n      });\n    }\n  }\n\n}\n","<h2 style=\"margin-top: 0px;\">Neuen Eintrag hinzufügen</h2>\n\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label>Titel:</label>\n        <input [(ngModel)]=\"title\" name=\"title\" class=\"entry-input form-control\" type=\"text\" censorship required>\n    </div>\n    <div *ngIf=\"form?.controls['title']?.touched === true\">\n        <div *ngIf=\"form?.controls['title']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Titel ist ein Pflichtfeld\n        </div>\n\n        <div *ngIf=\"form?.controls['title']?.hasError('censorship') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Text:</label>\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\" required censorship></textarea>\n    </div>\n    <div *ngIf=\"form?.controls['text']?.touched === true\">\n        <div *ngIf=\"form?.controls['text']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Text ist ein Pflichtfeld\n        </div>\n        <div *ngIf=\"form?.controls['text']?.hasError('censorship') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n    <button\n        [disabled]=\"!title || !text || !form.valid\"\n        (click)=\"save()\"\n        class=\"btn btn-default\">Speichern</button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport { ForumService } from 'src/app/shared/services/forum.service';\n\n@Component({\n  selector: 'single-entry',\n  templateUrl: './single-entry.component.html',\n  styleUrls: ['./single-entry.component.css']\n})\nexport class SingleEntryComponent implements OnInit {\n\n  @Input(\"title\")\n  public title: string;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Output(\"deleted\") EntryDeleted = new EventEmitter();\n\n  @Output(\"openEdit\") EntryEdit = new EventEmitter<number>();\n\n  public IsSameUser: boolean;\n\n  constructor(private appStateService: AppstateService, private forumService: ForumService) { }\n\n  ngOnInit(): void {\n    const user: User = this.appStateService.GetUser();\n    this.IsSameUser = user !== null && user.userName === this.creator;\n  }\n\n  public deleteEntry()\n  {\n    this.forumService.deleteEntry(this.id).subscribe((test)=> {\n      console.log(test);\n      this.EntryDeleted.next();\n    });\n\n\n  }\n\n  public editEntry()\n  {\n    this.EntryEdit.next(this.id);\n  }\n\n  /*@HostListener('window:resize')\n  windowSizeChanged()\n  {\n    var card = document.getElementById(\"single-card\");\n    this.footerWidth = card.offsetWidth+\"px;\";\n    console.log(this.footerWidth);\n  }*/\n\n}\n\n","<div class=\"single-card\" id=\"single-card\">\n    <a [routerLink]=\"['/entry',id]\">\n    <div>\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\n    </div>\n    <div style=\"color:#666666;\"> \n        {{text}}\n    </div>\n    </a>\n    <div class=\"single-entry-footer\">\n        <div class=\"created\">\n            Erstellt von: {{creator}}\n        </div>\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteEntry()\">\n            <i class=\"ti-trash\"></i>\n        </div>\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editEntry()\">\n            <i class=\"ti-pencil-alt\"></i>\n        </div>\n    </div>\n    \n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { User } from '../../shared/entities/user';\nimport { EntryService } from '../../shared/services/entry.service';\nimport { Comment } from '../../shared/entities/comment';\nimport { CensorshipCommentValidatorDirective } from 'src/app/shared/validation/censorship_comment-validator.directive';\n\n@Component({\n  selector: 'comment-form',\n  templateUrl: './comment-form.component.html',\n  styleUrls: ['./comment-form.component.css']\n})\nexport class CommentFormComponent implements OnInit {\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Output(\"saved\") CommentSaved = new EventEmitter();\n\n  constructor(private appstateService: AppstateService, private entryService: EntryService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => {\n        this.entry = Number(params.get('id'));\n        console.log(this.entry);\n      }\n    );\n  }\n\n  public save()\n  {\n    const user: User = this.appstateService.GetUser();\n    if(this.id !== null && this.id !== undefined)\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id: this.id,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n      this.entryService.upateComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }\n    else\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id:null,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n  \n      this.entryService.addComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }    \n  }\n}\n","<h2 style=\"margin-top: 0px;\">Kommentar hinzufügen</h2>\n\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label>Text:</label>\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\" required censorship_comment></textarea>\n    </div>\n\n    <div *ngIf=\"form?.controls['text']?.touched === true\">\n        <div *ngIf=\"form?.controls['text']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Text ist ein Pflichtfeld\n        </div>\n        <div *ngIf=\"form?.controls['text']?.hasError('censorship_comment') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n\n    <button\n        [disabled]=\"!text || !form.valid\"\n        (click)=\"save()\"\n        class=\"btn btn-default\">Speichern</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { EntryService } from '../../shared/services/entry.service'\nimport { Comment } from '../../shared/entities/comment';\nimport { Entry } from '../../shared/entities/entry';\nimport { ForumService } from '../../shared/services/forum.service';\n\n@Component({\n  selector: 'app-entry-detail',\n  templateUrl: './entry-detail.component.html',\n  styleUrls: ['./entry-detail.component.css']\n})\nexport class EntryDetailComponent implements OnInit {\n\n  @Input(\"title\")\n  public title: string;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  private entry_id: number;\n  public entry: Entry;\n  public IsUserLoggedIn: boolean = false;\n  public IsAddCommentPopupShown: boolean = false;\n  public IsEditCommentPopupShown: boolean = false;\n  public CommentToEdit:Comment= null;\n\n  public IsEditEntryPopupShown = false;\n\n  public Comments: Array<Comment> = [];\n\n  constructor(private route: ActivatedRoute, private appstateService: AppstateService, private entryService: EntryService, private forumSerivce: ForumService) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(\n      params => {\n        this.entry_id = Number(params.get('id'));\n        console.log(this.entry_id);\n      }\n    );\n\n    this.forumSerivce.getEntries().forEach(obj => {\n      obj.forEach(child =>{\n        if( child.id == this.entry_id ){\n          this.entry = child;\n          this.title = this.entry.title;\n          this.text = this.entry.text;\n          this.creator = this.entry.creator;\n        }\n      })      \n    });\n\n    this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\n\n    this.ReadComments();\n    \n  }\n\n  public showAddComment()\n  {\n    if(!this.IsAddCommentPopupShown)\n    {\n      this.IsAddCommentPopupShown = true;\n    }\n  }\n\n  private ReadComments()\n  {\n    this.entryService.getComment(this.entry_id).subscribe((comments) => {\n      this.Comments = comments;\n    })\n  }\n\n  public closePopup()\n  {\n    if(this.IsAddCommentPopupShown)\n    {\n      this.IsAddCommentPopupShown = false;\n    }\n\n    if(this.IsEditCommentPopupShown)\n    {\n      this.IsEditCommentPopupShown = false;\n    }\n  }\n\n  public commentSaved()\n  {\n    this.closePopup();\n    this.ReadComments();\n  }\n\n  public commentDeleted()\n    {\n      this.ReadComments();\n    }\n\n  public commentLiked()\n  {\n    this.ReadComments();\n  }\n\n  public editComment(event){\n\n    this.CommentToEdit = this.Comments.find(x=> x.id == event);\n    this.IsEditCommentPopupShown = true;\n  }\n\n}\n","\n<div class=\"single-card\" id=\"single-card\">\n    <div>\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\n    </div>\n    <div style=\"color:#666666;\"> \n        {{text}}\n        <p></p>\n    </div>\n    <div class=\"created\">\n        Erstellt von: {{creator}}\n    </div>\n</div>\n\n<div class=\"card\">\n\n    <div class=\"header-table header\">\n        <table style=\"width: 100%;\">\n            <tr>\n                <td>\n                    <h3 class=\"title\">Kommentare</h3>\n                </td>\n                <td align=\"right\" *ngIf=\"IsUserLoggedIn == true\" >\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddComment()\" value=\"Kommentar hinzufügen\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n    <div>\n        \n    </div>\n\n    <div class=\"card enty-container\">\n        <app-single-comment class=\"col-md-12\"\n        *ngFor=\"let c of Comments\"\n        text=\"{{c.text}}\"\n        creator=\"{{c.creator}}\"\n        id=\"{{c.id}}\"\n        (deleted)=\"commentDeleted()\"\n        (liked)=\"commentLiked()\"\n        (openEdit)=\"editComment($event)\"\n        ></app-single-comment>\n    </div>\n\n\n    <div class=\"popup\" *ngIf=\"IsAddCommentPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <comment-form  \n            (saved)=\"commentSaved()\"     \n            ></comment-form>\n        </div>\n    </div>\n\n    <div class=\"popup\" *ngIf=\"IsEditCommentPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <comment-form\n                id=\"{{CommentToEdit.id}}\"\n                text=\"{{CommentToEdit.text}}\"\n            (saved)=\"commentSaved()\"\n            ></comment-form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EntryDetailComponent } from './entry-detail.component';\nimport { CommentFormComponent } from '../comment-form/comment-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { SingleCommentComponent } from '../single-comment/single-comment.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    EntryDetailComponent, \n    CommentFormComponent,\n    SingleCommentComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule\n  ],\n  exports:[\n    EntryDetailComponent,\n    CommentFormComponent,\n    FormsModule,\n    SingleCommentComponent\n  ]\n})\nexport class EntryDetailModule { }","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Like } from '../../shared/entities/like';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { EntryService } from '../../shared/services/entry.service';\n\n@Component({\n  selector: 'app-single-comment',\n  templateUrl: './single-comment.component.html',\n  styleUrls: ['./single-comment.component.css']\n})\nexport class SingleCommentComponent implements OnInit {\n\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"likes\")\n  public likes: number;\n\n  @Output(\"deleted\") CommentDeleted = new EventEmitter();\n\n  @Output(\"liked\") CommentLike = new EventEmitter();\n\n  @Output(\"openEdit\") CommentEdit = new EventEmitter<number>();\n\n  public IsSameUser: boolean;\n  public IsUser: boolean;\n  public IsLiked: boolean = false;\n  private like: Like;\n\n  constructor(private appStateService: AppstateService, private entryService: EntryService) { }\n\n  ngOnInit(): void {\n    this.likes = 0;\n    const user: User = this.appStateService.GetUser();\n    this.IsSameUser = user !== null && user.userName === this.creator;\n    if(user == null) {\n      this.IsUser = false; \n    }else {\n      this.IsUser = true;\n\n      console.log(user.id);\n      console.log(this.id);\n      this.entryService.getLike(user.id, this.id).forEach(obj => {\n        obj.forEach(child => {\n        this.like = child;\n        this.IsLiked = true;\n        })\n      });\n    }\n\n    this.entryService.getLikesAll(this.id).forEach(obj => {\n      obj.forEach(child => {\n        this.likes = this.likes + 1;\n        console.log(this.likes);\n      })\n      console.log(this.likes);\n    });\n  \n    console.log('Anzahl Likes:');\n    console.log(this.likes);\n  }\n\n  public deleteComment()\n  {\n    this.entryService.deleteComment(this.id).subscribe((test)=> {\n      console.log(test);\n      this.CommentDeleted.next();\n    });\n  }\n\n  public editComment()\n  {\n    this.CommentEdit.next(this.id);\n  }\n\n  public likeComment()\n  {\n    const user: User = this.appStateService.GetUser();\n    const newLike: Like = {\n      comment: this.id,\n      id:null,\n      creator: user.userName,\n      creatorId: user.id\n    }\n    this.entryService.likeComment(newLike).subscribe((test)=> {\n      this.CommentLike.next();\n    });\n    console.log('LIKE');\n    console.log(this.id);\n  }\n\n  public unlikeComment()\n  {\n    this.entryService.unlikeComment(this.like.id).subscribe((test)=> {\n      console.log(test);\n      this.CommentLike.next();\n    });\n    console.log('UNLIKE');\n    console.log(this.id);\n  }\n\n}\n","<div class=\"single-card\" id=\"single-card\">\n    <div style=\"color:#666666;\"> \n        <div class=\"created\">\n            <p hidden>{{id}}</p>\n            {{creator}} hat kommentiert:\n        </div>\n        {{text}}\n        <p></p>\n        <p>Dieser Kommentar gefällt: {{likes}}</p>\n    </div>\n    <div class=\"single-entry-footer\" id=\"single-footer\">\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteComment()\">\n            <i class=\"ti-trash\"></i>\n        </div>\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editComment()\">\n            <i class=\"ti-pencil-alt\"></i>\n        </div>\n        <div class=\"like\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == false\" (click)=\"likeComment()\">\n            <i class=\"ti-thumb-up\"></i>\n        </div>\n        <div class=\"unlike\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == true\" (click)=\"unlikeComment()\">\n            <i class=\"ti-thumb-down\"></i>\n        </div>\n    </div>\n    \n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoginComponent\n\n  ],\n  imports: [\n      CommonModule,\n      FormsModule\n  ],\n  exports: [\n    LoginComponent\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport {HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../../shared/entities/userResponse';\nimport {UserService} from '../../shared/services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.appstateService.IsUserLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  signInUser(): void {\n    const params = new HttpParams()\n      .set('username', this.username)\n      .set('password', this.password);\n\n    this.userService.getUser(params)\n      .subscribe(\n        (users: UserResponse[]) => {\n          // If user is not found show error message\n          if (users.length === 0) {\n            console.error('No user found');\n            this.showErrorDiv('User / Password combination not found');\n            return;\n          }\n          this.clearErrorDiv();\n          // Set user information in appstateService\n          this.appstateService.SetUser(users[0].id, users[0].username);\n          this.router.navigate(['/']);\n        },\n        (errResp) => {\n          console.error('Error loading user', errResp);\n        });\n  }\n\n  registerUser(): void {\n    const getParams = new HttpParams()\n      .set('username', this.username);\n\n    this.userService.getUser(getParams)\n      .subscribe(\n        (users: UserResponse[]) => {\n          // If user with same username is found, show error message\n          if (users.length > 0) {\n            console.error('Username already in use');\n            this.showErrorDiv('Username already in use');\n            return;\n          }\n\n          this.userService.addUser(this.username, this.password)\n            .subscribe(\n              (user: UserResponse) => {\n                this.clearErrorDiv();\n                // Set user information in appstateService\n                this.appstateService.SetUser(user.id, user.username);\n\n                this.router.navigate(['/']);\n              },\n              (errResp) => {\n                console.error('Error creating user', errResp);\n              });\n        },\n        (errResp) => {\n          console.error('Error loading user', errResp);\n        });\n  }\n\n  clearErrorDiv(): void {\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = '';\n    document.getElementById('errorDiv').classList.add('hidden');\n  }\n\n  showErrorDiv(message: string): void {\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = message;\n    document.getElementById('errorDiv').classList.remove('hidden');\n  }\n}\n","<div class=\"container\">\n\n  <form #form=\"ngForm\" >\n    <h2>Please sign in</h2>\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n    <input type=\"text\" id=\"inputUsername\" name=\"inputUsername\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n    <div *ngIf=\"form?.controls['inputUsername']?.invalid && (form?.controls['inputUsername']?.dirty || form?.controls['inputUsername']?.touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"form?.controls['inputUsername']?.errors.required\">\n        Username is required.\n      </div>\n    </div>\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" [(ngModel)]=\"password\"  class=\"form-control\" placeholder=\"Password\" required=\"\">\n    <div *ngIf=\"form?.controls['inputPassword']?.invalid && (form?.controls['inputPassword']?.dirty || form?.controls['inputPassword']?.touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"form?.controls['inputPassword']?.errors.required\">\n        Password is required.\n      </div>\n    </div>\n\n    <div id=\"errorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\n      <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"clearErrorDiv()\">&times;</span></button>\n      <p>User / Password combination not found</p>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"signInUser()\"\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Sign in</button>\n      </div>\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"registerUser()\"\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Register</button>\n      </div>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/entities/user';\nimport {Router} from '@angular/router';\nimport { AppstateService } from '../shared/services/appstate.service';\n\n@Component({\n    selector: 'app-navbar-cmp',\n    templateUrl: 'navbar.component.html'\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n    constructor(public appstateService: AppstateService, private router: Router)\n    {\n\n    }\n\n    public isUserLoggedIn = false;\n    public UserName = '';\n\n    private userLoggedInSubscription: Subscription;\n    private sidebarVisible = false;\n\n    ngOnDestroy(): void {\n        this.userLoggedInSubscription.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.userLoggedInSubscription = this.appstateService.UserChanged.subscribe((value: User) => {\n            console.log(value);\n            this.isUserLoggedIn = value !== null && value.id !== 0;\n            this.UserName = value.userName;\n        });\n    }\n\n    sidebarToggle(): void {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (this.sidebarVisible === false) {\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    logOutUser(): void {\n      this.appstateService.SetUser(0, null);\n      this.router.navigate(['/login']);\n    }\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\">StackUnderStop</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li *ngIf=\"isUserLoggedIn === false\">\n                    <a routerLink=\"/login\">\n                        <i class=\"ti-user\"></i>\n                        <p>Login/Register</p>\n                    </a>\n                </li>\n                <li *ngIf=\"isUserLoggedIn === true\" class=\"dropdown\">\n                  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ti-user\"></i> Hallo {{UserName}} <span class=\"caret\"></span></a>\n                  <ul class=\"dropdown-menu\">\n                    <li><a routerLink=\"/settings\">Settings</a></li>\n                    <li><a (click)=\"logOutUser()\">Log out</a></li>\n                  </ul>\n                </li>\n            </ul>\n\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../shared/services/user.service';\nimport {Router} from '@angular/router';\nimport {HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../shared/entities/userResponse';\nimport { AppstateService } from '../shared/services/appstate.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  passwordNew: string;\n  passwordNew2: string;\n\n  deletionState = 0;\n\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (!this.appstateService.IsUserLoggedIn()) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  changePassword(): void {\n    // Check if both password values match\n    if (this.passwordNew !== this.passwordNew2) {\n      this.showMessageDiv('passwordErrorDiv', 'The two password values must match');\n      return;\n    }\n\n    const curUser = this.appstateService.GetUser();\n\n    const params = new HttpParams()\n      .set('username', curUser.userName)\n      .set('password', this.passwordNew);\n\n    this.userService.updateUser(curUser.id, params)\n      .subscribe(\n        (user: UserResponse) => {\n          this.showMessageDiv('passwordSuccessDiv');\n          console.log(user);\n        },\n        (errResp) => {\n          console.error('Error creating user', errResp);\n        });\n  }\n\n  deleteAccount(): void {\n    console.log('delete start');\n    this.userService.deleteUser(this.appstateService.GetUser().id)\n      .subscribe(\n        (user: UserResponse) => {\n          console.log(user);\n          this.appstateService.SetUser(0, null);\n          this.router.navigate(['/login']);\n        },\n        (errResp) => {\n          console.error('Error deleting user', errResp);\n        });\n  }\n\n  increaseDeletionState(): void  {\n    this.deletionState++;\n  }\n  resetDeletionState(): void {\n    this.deletionState = 0;\n  }\n\n  hideMessageDiv(elementId: string, doClearDiv: boolean = false): void {\n    if (doClearDiv){\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = '';\n    }\n    document.getElementById(elementId).classList.add('hidden');\n  }\n\n  showMessageDiv(elementId: string, message: string = null): void {\n    if (message) {\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = message;\n    }\n    document.getElementById(elementId).classList.remove('hidden');\n  }\n}\n","<div class=\"container\">\n  <h2>Settings</h2>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Password</div>\n    <div class=\"panel-body\">\n      <form #form=\"ngForm\" >\n        <label for=\"inputNewPassword\" class=\"sr-only\">Username</label>\n        <input type=\"password\" id=\"inputNewPassword\" name=\"inputNewPassword\" [(ngModel)]=\"passwordNew\" class=\"form-control\" placeholder=\"New password\" required=\"\" autofocus=\"\" appNewPassword>\n        <label for=\"inputNewPassword2\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputNewPassword2\" name=\"inputNewPassword2\" [(ngModel)]=\"passwordNew2\" class=\"form-control\" placeholder=\"Repeat new password\" required=\"\">\n        <div id=\"passwordErrorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordErrorDiv', true)\">&times;</span></button>\n          <p>User / Password combination not found</p>\n        </div>\n        <div id=\"passwordSuccessDiv\" class=\"alert alert-success hidden\" role=\"alert\">\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordSuccessDiv')\">&times;</span></button>\n          <p>Password successfully updated</p>\n        </div>\n        <button class=\"btn btn-primary pull-right\" (click)=\"changePassword()\"\n                [disabled]=\"form?.controls['inputNewPassword']?.invalid || form?.controls['inputNewPassword2']?.invalid\">Change password</button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Account</div>\n    <div *ngIf=\"deletionState==0\" class=\"panel-body\">\n      <div class=\"col-md-8\">Willst du deinen kompletten account löschen?</div>\n      <div class=\"col-md-4\"><button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Account löschen</button></div>\n    </div>\n    <div *ngIf=\"deletionState==1\" class=\"panel-body\">\n      <div class=\"col-md-8\">Bist du dir sicher?</div>\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\n        <button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Ja</button>\n      </div>\n    </div>\n    <div *ngIf=\"deletionState==2\" class=\"panel-body\">\n      <div class=\"col-md-8\">Komm schon! Bist du dir wirklich sicher?</div>\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\n        <button class=\"btn btn-primary pull-right\" (click)=\"deleteAccount()\">JA!!</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {User} from '../../shared/entities/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppstateService {\n\n  public UserChanged = new EventEmitter();\n\n  private readonly UserBehavior = new BehaviorSubject<User>(null);\n\n  public IsUserLoggedIn(): boolean\n  {\n    const user: User = this.GetUser();\n    return user !== null && user.id !== 0;\n  }\n\n  public GetUser(): User\n  {\n    return this.UserBehavior.getValue();\n  }\n\n  public SetUser(userId: number, name: string): void\n  {\n    const value: User = {\n      id : userId,\n      userName : name\n    };\n    this.UserBehavior.next(value);\n    this.UserChanged.next(value);\n  }\n\n  constructor() { }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\nimport { Entry } from '../../shared/entities/entry';\nimport { ForumService } from './forum.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultForumService implements ForumService {\n  private BaseUrl:string = \"http://localhost:3000/\";\n\n  constructor(private http: HttpClient) { }\n  getBlacklistedItems(): Observable<BlacklistItem[]> {\n    let url = this.BaseUrl+'blacklist';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.get<BlacklistItem[]>(url, {headers});\n  }\n  upateEntry(entry: Entry): Observable<object> {\n    let url = this.BaseUrl+'entries/'+entry.id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.put(url, entry,{headers});\n  }\n  addEntry(entry: Entry): Observable<object> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, entry,{headers});\n  }\n\n  getEntries(): Observable<Entry[]> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Entry[]>(url, {headers});\n  }\n\n  deleteEntry(id:number): Observable<object>\n  {\n    let url = this.BaseUrl+\"entries/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Comment } from '../entities/comment';\nimport { Like } from '../entities/like';\nimport { Observable } from 'rxjs';\nimport { CommentFormComponent } from '../../entry-detail/comment-form/comment-form.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntryService {\n  private BaseUrl:string = \"http://localhost:3000/\";\n\n  constructor(private http: HttpClient) { }\n\n  upateComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'comments/'+comment.id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.put(url, comment,{headers});\n  }\n  addComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'comments';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, comment,{headers});\n  }\n\n  getComment(entry_id: number): Observable<Comment[]> {\n    let url = this.BaseUrl+'comments?entry='+entry_id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Comment[]>(url, {headers});\n  }\n\n  getLike(user_id: number, commend_id: number): Observable<Like[]> {\n    let url = this.BaseUrl+'likes?comment='+commend_id+'&creatorId='+user_id;\n    console.log(url);\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Like[]>(url, {headers});\n  }\n\n  getLikesAll(commend_id: number): Observable<Like[]> {\n    let url = this.BaseUrl+'likes?comment='+commend_id;\n    console.log(url);\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Like[]>(url, {headers});\n  }\n\n  likeComment(like: Like){\n    let url = this.BaseUrl+'likes';\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, like,{headers});\n  }\n\n  unlikeComment(id: number){\n    let url = this.BaseUrl+\"likes/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n\n  deleteComment(id:number): Observable<object>\n  {\n    let url = this.BaseUrl+\"comments/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Entry } from '../../shared/entities/entry';\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\nimport {DefaultForumService} from './defaultforum.service';\n\n@Injectable({\n  providedIn: 'root',\n  useClass: DefaultForumService\n})\nexport abstract class ForumService {\n\n  constructor() { }\n\n  abstract getEntries(): Observable<Entry[]>;\n\n  abstract addEntry(entry: Entry): Observable<object>;\n  \n  abstract upateEntry(entry: Entry): Observable<object>;\n\n  abstract deleteEntry(id:number): Observable<object>;\n\n  abstract getBlacklistedItems(): Observable<BlacklistItem[]>;  \n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../../shared/entities/userResponse';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  url: string;\n  headers: HttpHeaders;\n\n  constructor(private http: HttpClient) {\n    this.url = 'http://localhost:3000/users';\n  }\n\n\n  getUser(params: HttpParams): Observable<UserResponse[]> {\n\n    const headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<UserResponse[]>(this.url, {headers, params});\n  }\n\n  addUser(username: string, password: string): Observable<UserResponse> {\n    const newUser = {\n      username,\n      password\n    };\n\n    return this.http.post<UserResponse>(this.url, newUser);\n  }\n\n  updateUser(userId: number, params: HttpParams): Observable<UserResponse>  {\n    return this.http.put<UserResponse>(this.url + '/' + userId, params);\n  }\n\n  deleteUser(userId: number): Observable<UserResponse> {\n    return this.http.delete<UserResponse>(this.url + '/' + userId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewPasswordDirective } from './validation/new-password.directive';\nimport {CensorshipValidatorDirective} from './validation/censorship-validator.directive';\nimport {CensorshipCommentValidatorDirective} from './validation/censorship_comment-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NewPasswordDirective,\n    CensorshipValidatorDirective,\n    CensorshipCommentValidatorDirective\n  ],\n  exports: [\n    NewPasswordDirective,\n    CensorshipValidatorDirective,\n    CensorshipCommentValidatorDirective\n  ]\n})\nexport class SharedModule { }\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { ForumService } from '../services/forum.service';\nimport {map} from 'rxjs/operators';\n\n@Directive({\n  selector: '[censorship]',\n  providers: [{\n    provide: NG_ASYNC_VALIDATORS,\n    useExisting: CensorshipValidatorDirective,\n    multi: true\n  }]\n})\nexport class CensorshipValidatorDirective implements AsyncValidator {\n\n  constructor(private forumService: ForumService) { }\n  validate(control: AbstractControl): Promise<ValidationErrors> | Observable<ValidationErrors> {\n    return this.forumService.getBlacklistedItems().pipe(map((response) =>\n    {\n      let text:string = control.value;\n      \n      let hasError: boolean;\n      for(let i = 0; i< response.length;i++)\n      {\n        if(text.includes(response[i].value))\n        {\n          return {'censorship':true};\n        }\n      }\n      return null;\n    }));\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    \n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { ForumService } from '../services/forum.service';\nimport { map } from 'rxjs/operators';\n\n@Directive({\n  selector: '[censorship_comment]',\n  providers: [{\n    provide: NG_ASYNC_VALIDATORS,\n    useExisting: CensorshipCommentValidatorDirective,\n    multi: true\n  }]\n})\nexport class CensorshipCommentValidatorDirective implements AsyncValidator {\n  constructor(private forumService: ForumService) { }\n  validate(control: AbstractControl): Promise<ValidationErrors> | Observable<ValidationErrors> {\n    return this.forumService.getBlacklistedItems().pipe(map((response) =>\n    {\n      let text:string = control.value;\n      \n      let hasError: boolean;\n      for(let i = 0; i< response.length;i++)\n      {\n        if(text.includes(response[i].value))\n        {\n          return {'censorship_comment':true};\n        }\n      }\n      return null;\n    }));\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    \n  }\n\n}\n","import { Directive } from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors} from '@angular/forms';\n\n@Directive({\n  selector: '[appNewPassword]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: NewPasswordDirective,\n    multi: true\n  }]\n})\nexport class NewPasswordDirective {\n\n  constructor() { }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const validCities: string[] = ['Hamburg', 'Graz'];\n    console.log(c.value);\n    if (c.value && validCities.indexOf(c.value) === -1) {\n      return {\n        city: {\n          actualValue: c.value,\n          validCities\n        }\n      };\n    }\n    return null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}