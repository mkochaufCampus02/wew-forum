{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/entries/entries.component.ts","webpack:///src/app/dashboard/entries/entries.component.html","webpack:///src/app/dashboard/entry-form/entry-form.component.ts","webpack:///src/app/dashboard/entry-form/entry-form.component.html","webpack:///src/app/dashboard/single-entry/single-entry.component.ts","webpack:///src/app/dashboard/single-entry/single-entry.component.html","webpack:///src/app/entry-detail/comment-form/comment-form.component.ts","webpack:///src/app/entry-detail/comment-form/comment-form.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.ts","webpack:///src/app/entry-detail/entry-detail/entry-detail.component.html","webpack:///src/app/entry-detail/entry-detail/entry-detail.module.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.ts","webpack:///src/app/entry-detail/single-comment/single-comment.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login/login.component.ts","webpack:///src/app/login/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/settings/settings.component.ts","webpack:///src/app/settings/settings.component.html","webpack:///src/app/shared/services/appstate.service.ts","webpack:///src/app/shared/services/defaultforum.service.ts","webpack:///src/app/shared/services/entry.service.ts","webpack:///src/app/shared/services/forum.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validation/censorship-validator.directive.ts","webpack:///src/app/shared/validation/new-password.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardModule","title","text","creator","EntriesComponent","forumSerivce","appstateService","Entries","IsUserLoggedIn","IsAddEntryPopupShown","IsEditEntryPopupShown","EntryToEdit","ReadEntries","getEntries","subscribe","entries","closePopup","event","find","x","EntryFormComponent","forumService","EntrySaved","user","GetUser","undefined","newEntry","userName","creatorId","upateEntry","test","console","log","next","addEntry","save","SingleEntryComponent","appStateService","EntryDeleted","EntryEdit","IsSameUser","deleteEntry","CommentFormComponent","entryService","route","CommentSaved","paramMap","params","entry","Number","get","newComment","upateComment","addComment","EntryDetailComponent","IsAddCommentPopupShown","IsEditCommentPopupShown","CommentToEdit","Comments","entry_id","forEach","obj","child","ReadComments","getComment","comments","EntryDetailModule","SingleCommentComponent","CommentDeleted","CommentLike","CommentEdit","IsLiked","likes","IsUser","getLike","like","getLikesAll","deleteComment","newLike","comment","likeComment","unlikeComment","LoginModule","LoginComponent","userService","router","navigate","set","username","password","getUser","users","length","error","showErrorDiv","clearErrorDiv","SetUser","errResp","getParams","addUser","document","getElementById","getElementsByTagName","innerHTML","classList","add","message","remove","signInUser","registerUser","NavbarComponent","isUserLoggedIn","UserName","sidebarVisible","userLoggedInSubscription","unsubscribe","UserChanged","value","body","SettingsComponent","deletionState","passwordNew","passwordNew2","showMessageDiv","curUser","updateUser","deleteUser","elementId","doClearDiv","hideMessageDiv","changePassword","AppstateService","UserBehavior","getValue","userId","name","providedIn","DefaultForumService","http","BaseUrl","url","headers","put","post","EntryService","user_id","commend_id","ForumService","useClass","UserService","newUser","SharedModule","CensorshipValidatorDirective","control","getBlacklistedItems","response","element","indexOf","blacklist","valid","fn","provide","useExisting","multi","NewPasswordDirective","c","validCities","city","actualValue","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { EntriesComponent } from './dashboard/entries/entries.component';\r\nimport { EntryDetailComponent } from './entry-detail/entry-detail/entry-detail.component';\r\nimport { LoginComponent } from './login/login/login.component';\r\nimport {SettingsComponent} from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EntriesComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'entry/:id',\r\n    component: EntryDetailComponent\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forum',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n}\r\n","<div class=\"wrapper\">\r\n\r\n  <div class=\"main-panel\">\r\n      <app-navbar-cmp></app-navbar-cmp>\r\n\r\n      <router-outlet>\r\n\r\n      </router-outlet>\r\n  </div>\r\n\r\n</div>\r\n","import { NavbarComponent } from './navbar/navbar.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport {DashboardModule} from './dashboard/dashboard.module';\r\nimport {LoginModule} from './login/login.module';\r\nimport {EntryDetailModule} from './entry-detail/entry-detail/entry-detail.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport {SharedModule} from './shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      DashboardModule,\r\n      LoginModule,\r\n      EntryDetailModule,\r\n      AppRoutingModule,\r\n      SharedModule\r\n   ],\r\n   declarations: [\r\n      AppComponent,\r\n      NavbarComponent,\r\n      SettingsComponent\r\n   ],\r\n   providers: [],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntriesComponent } from './entries/entries.component';\r\nimport { SingleEntryComponent } from './single-entry/single-entry.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EntryFormComponent } from './entry-form/entry-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EntriesComponent,\r\n    SingleEntryComponent,\r\n    EntryFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    EntriesComponent,\r\n    SingleEntryComponent,\r\n    EntryFormComponent,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import {Entry} from '../../shared/entities/entry';\r\nimport {ForumService} from '../../shared/services/forum.service'\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\n\r\n@Component({\r\n  selector: 'app-entries',\r\n  templateUrl: './entries.component.html',\r\n  styleUrls: ['./entries.component.css']\r\n})\r\nexport class EntriesComponent implements OnInit {\r\n\r\n    public Entries: Array<Entry> = [];\r\n\r\n    public IsUserLoggedIn: boolean = false;\r\n\r\n    public IsAddEntryPopupShown = false;\r\n    public IsEditEntryPopupShown = false;\r\n    public EntryToEdit:Entry= null;\r\n\r\n    constructor(private forumSerivce: ForumService, private appstateService: AppstateService) {\r\n    }\r\n\r\n    ngOnInit(): void { \r\n      this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public showAddEntry()\r\n    {\r\n      if(!this.IsAddEntryPopupShown)\r\n      {\r\n        this.IsAddEntryPopupShown = true;\r\n      }\r\n    }\r\n\r\n    private ReadEntries()\r\n    {\r\n      this.forumSerivce.getEntries().subscribe((entries) => {\r\n        this.Entries = entries;\r\n      })\r\n    }\r\n\r\n    public closePopup()\r\n    {\r\n      if(this.IsAddEntryPopupShown)\r\n      {\r\n        this.IsAddEntryPopupShown = false;\r\n      }\r\n\r\n      if(this.IsEditEntryPopupShown)\r\n      {\r\n        this.IsEditEntryPopupShown = false;\r\n      }\r\n    }\r\n\r\n    public entrySaved()\r\n    {\r\n      this.closePopup();\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public entryDeleted()\r\n    {\r\n      this.ReadEntries();\r\n    }\r\n\r\n    public editEntry(event){\r\n\r\n      this.EntryToEdit = this.Entries.find(x=> x.id == event);\r\n      this.IsEditEntryPopupShown = true;\r\n    }\r\n\r\n}\r\n","<div class=\"card\">\r\n\r\n    <div class=\"header-table header\">\r\n        <table style=\"width: 100%;\">\r\n            <tr>\r\n                <td>\r\n                    <h2 class=\"title\">Forum-Einträge</h2>\r\n                </td>\r\n                <td *ngIf=\"IsUserLoggedIn == true\" align=\"right\">\r\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddEntry()\" value=\"Eintrag hinzufügen\">\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    \r\n    <div>\r\n        \r\n    </div>\r\n\r\n    <div class=\"card enty-container\">\r\n        <single-entry class=\"col-md-4 col-sm-4 col-lg-4 col-xs-6\"\r\n        *ngFor=\"let e of Entries\"\r\n        title=\"{{e.title}}\"\r\n        text=\"{{e.text}}\"\r\n        creator=\"{{e.creator}}\"\r\n        id=\"{{e.id}}\"\r\n        (deleted)=\"entryDeleted()\"\r\n        (openEdit)=\"editEntry($event)\"\r\n        ></single-entry>\r\n    </div>\r\n\r\n\r\n    <div class=\"popup\" *ngIf=\"IsAddEntryPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <entry-form\r\n            (saved)=\"entrySaved()\"\r\n            ></entry-form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" *ngIf=\"IsEditEntryPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <entry-form\r\n                id=\"{{EntryToEdit.id}}\"\r\n                title=\"{{EntryToEdit.title}}\"\r\n                text=\"{{EntryToEdit.text}}\"\r\n            (saved)=\"entrySaved()\"\r\n            ></entry-form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Entry } from '../../shared/entities/entry';\r\nimport { User } from '../../shared/entities/user';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport { ForumService } from 'src/app/shared/services/forum.service';\r\n\r\n\r\n@Component({\r\n  selector: 'entry-form',\r\n  templateUrl: './entry-form.component.html',\r\n  styleUrls: ['./entry-form.component.css']\r\n})\r\nexport class EntryFormComponent implements OnInit {\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Input(\"title\")\r\n  public title: string;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Output(\"saved\") EntrySaved = new EventEmitter();\r\n\r\n  constructor(private forumService: ForumService, private appstateService: AppstateService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public save()\r\n  {\r\n    const user: User = this.appstateService.GetUser();\r\n    if(this.id !== null && this.id !== undefined)\r\n    {\r\n      const newEntry: Entry = {\r\n        id:this.id,\r\n        title: this.title,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n      this.forumService.upateEntry(newEntry).subscribe((test)=> {\r\n        console.log(test);\r\n        this.EntrySaved.next(newEntry);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      const newEntry: Entry = {\r\n        id:null,\r\n        title: this.title,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n  \r\n      this.forumService.addEntry(newEntry).subscribe((test)=> {\r\n        console.log(test);\r\n        this.EntrySaved.next(newEntry);\r\n      });\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n}\r\n","<h2 style=\"margin-top: 0px;\">Neuen Eintrag hinzufügen</h2>\r\n\r\n<form #form=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label>Titel:</label>\r\n        <input [(ngModel)]=\"title\" name=\"title\" class=\"entry-input form-control\" type=\"text\" censorship>\r\n    </div>\r\n   <!-- <div class=\"alert alert-danger\" *ngIf=\"ngForm?.controls['title']?.hasError('blacklist')\">\r\n        Bitte drücke dich doch etwas netter aus.\r\n    </div>-->\r\n    <div class=\"form-group\">\r\n        <label>Text:</label>\r\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\" censorship></textarea>\r\n    </div>\r\n    <!--<div class=\"alert alert-danger\" *ngIf=\"ngForm?.controls['text']?.hasError('blacklist')\">\r\n        Bitte drücke dich doch etwas netter aus.\r\n    </div>-->\r\n\r\n    <button\r\n        [disabled]=\"!title || !text\"\r\n        (click)=\"save()\"\r\n        class=\"btn btn-default\">Speichern</button>\r\n</form>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { User } from '../../shared/entities/user';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport { ForumService } from 'src/app/shared/services/forum.service';\r\n\r\n@Component({\r\n  selector: 'single-entry',\r\n  templateUrl: './single-entry.component.html',\r\n  styleUrls: ['./single-entry.component.css']\r\n})\r\nexport class SingleEntryComponent implements OnInit {\r\n\r\n  @Input(\"title\")\r\n  public title: string;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Input(\"creator\")\r\n  public creator: string;\r\n\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Output(\"deleted\") EntryDeleted = new EventEmitter();\r\n\r\n  @Output(\"openEdit\") EntryEdit = new EventEmitter<number>();\r\n\r\n  public IsSameUser: boolean;\r\n\r\n  constructor(private appStateService: AppstateService, private forumService: ForumService) { }\r\n\r\n  ngOnInit(): void {\r\n    const user: User = this.appStateService.GetUser();\r\n    this.IsSameUser = user !== null && user.userName === this.creator;\r\n  }\r\n\r\n  public deleteEntry()\r\n  {\r\n    this.forumService.deleteEntry(this.id).subscribe((test)=> {\r\n      console.log(test);\r\n      this.EntryDeleted.next();\r\n    });\r\n\r\n\r\n  }\r\n\r\n  public editEntry()\r\n  {\r\n    this.EntryEdit.next(this.id);\r\n  }\r\n\r\n  /*@HostListener('window:resize')\r\n  windowSizeChanged()\r\n  {\r\n    var card = document.getElementById(\"single-card\");\r\n    this.footerWidth = card.offsetWidth+\"px;\";\r\n    console.log(this.footerWidth);\r\n  }*/\r\n\r\n}\r\n\r\n","<div class=\"single-card\" id=\"single-card\">\r\n    <a [routerLink]=\"['/entry',id]\">\r\n    <div>\r\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\r\n    </div>\r\n    <div style=\"color:#666666;\"> \r\n        {{text}}\r\n    </div>\r\n    </a>\r\n    <div class=\"single-entry-footer\">\r\n        <div class=\"created\">\r\n            Erstellt von: {{creator}}\r\n        </div>\r\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteEntry()\">\r\n            <i class=\"ti-trash\"></i>\r\n        </div>\r\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editEntry()\">\r\n            <i class=\"ti-pencil-alt\"></i>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport { User } from 'src/app/shared/entities/user';\r\nimport { EntryService } from 'src/app/shared/services/entry.service';\r\nimport { Comment } from 'src/app/shared/entities/comment';\r\n\r\n@Component({\r\n  selector: 'comment-form',\r\n  templateUrl: './comment-form.component.html',\r\n  styleUrls: ['./comment-form.component.css']\r\n})\r\nexport class CommentFormComponent implements OnInit {\r\n  @Input(\"entry\")\r\n  public entry: number;\r\n\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Output(\"saved\") CommentSaved = new EventEmitter();\r\n\r\n  constructor(private appstateService: AppstateService, private entryService: EntryService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(\r\n      params => {\r\n        this.entry = Number(params.get('id'));\r\n        console.log(this.entry);\r\n      }\r\n    );\r\n  }\r\n\r\n  public save()\r\n  {\r\n    const user: User = this.appstateService.GetUser();\r\n    if(this.id !== null && this.id !== undefined)\r\n    {\r\n      const newComment: Comment = {\r\n        entry: this.entry,\r\n        id: this.id,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n      this.entryService.upateComment(newComment).subscribe((test)=> {\r\n        console.log(test);\r\n        this.CommentSaved.next(newComment);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      const newComment: Comment = {\r\n        entry: this.entry,\r\n        id:null,\r\n        text: this.text,\r\n        creator: user.userName,\r\n        creatorId: user.id\r\n      }\r\n  \r\n      this.entryService.addComment(newComment).subscribe((test)=> {\r\n        console.log(test);\r\n        this.CommentSaved.next(newComment);\r\n      });\r\n    }    \r\n  }\r\n}\r\n","<h2 style=\"margin-top: 0px;\">Kommentar hinzufügen</h2>\r\n\r\n<form #form=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label>Text:</label>\r\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\"></textarea>\r\n    </div>\r\n\r\n    <button\r\n        [disabled]=\"!text\"\r\n        (click)=\"save()\"\r\n        class=\"btn btn-default\">Speichern</button>\r\n</form>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport { EntryService } from '../../shared/services/entry.service'\r\nimport { Comment } from '../../shared/entities/comment';\r\nimport { Entry } from 'src/app/shared/entities/entry';\r\nimport { ForumService } from 'src/app/shared/services/forum.service';\r\n\r\n@Component({\r\n  selector: 'app-entry-detail',\r\n  templateUrl: './entry-detail.component.html',\r\n  styleUrls: ['./entry-detail.component.css']\r\n})\r\nexport class EntryDetailComponent implements OnInit {\r\n\r\n  @Input(\"title\")\r\n  public title: string;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Input(\"creator\")\r\n  public creator: string;\r\n\r\n  private entry_id: number;\r\n  public entry: Entry;\r\n  public IsUserLoggedIn: boolean = false;\r\n  public IsAddCommentPopupShown: boolean = false;\r\n  public IsEditCommentPopupShown: boolean = false;\r\n  public CommentToEdit:Comment= null;\r\n\r\n  public IsEditEntryPopupShown = false;\r\n\r\n  public Comments: Array<Comment> = [];\r\n\r\n  constructor(private route: ActivatedRoute, private appstateService: AppstateService, private entryService: EntryService, private forumSerivce: ForumService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.paramMap.subscribe(\r\n      params => {\r\n        this.entry_id = Number(params.get('id'));\r\n        console.log(this.entry_id);\r\n      }\r\n    );\r\n\r\n    this.forumSerivce.getEntries().forEach(obj => {\r\n      obj.forEach(child =>{\r\n        this.entry = child;\r\n        this.title = this.entry.title;\r\n        this.text = this.entry.text;\r\n        this.creator = this.entry.creator;\r\n      })      \r\n    });\r\n\r\n    this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\r\n\r\n    this.ReadComments();\r\n    \r\n  }\r\n\r\n  public showAddComment()\r\n  {\r\n    if(!this.IsAddCommentPopupShown)\r\n    {\r\n      this.IsAddCommentPopupShown = true;\r\n    }\r\n  }\r\n\r\n  private ReadComments()\r\n  {\r\n    this.entryService.getComment(this.entry_id).subscribe((comments) => {\r\n      this.Comments = comments;\r\n    })\r\n  }\r\n\r\n  public closePopup()\r\n  {\r\n    if(this.IsAddCommentPopupShown)\r\n    {\r\n      this.IsAddCommentPopupShown = false;\r\n    }\r\n\r\n    if(this.IsEditCommentPopupShown)\r\n    {\r\n      this.IsEditCommentPopupShown = false;\r\n    }\r\n  }\r\n\r\n  public commentSaved()\r\n  {\r\n    this.closePopup();\r\n    this.ReadComments();\r\n  }\r\n\r\n  public commentDeleted()\r\n    {\r\n      this.ReadComments();\r\n    }\r\n\r\n  public commentLiked()\r\n  {\r\n    this.ReadComments();\r\n  }\r\n\r\n  public editComment(event){\r\n\r\n    this.CommentToEdit = this.Comments.find(x=> x.id == event);\r\n    this.IsEditCommentPopupShown = true;\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"single-card\" id=\"single-card\">\r\n    <div>\r\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\r\n    </div>\r\n    <div style=\"color:#666666;\"> \r\n        {{text}}\r\n        <p></p>\r\n    </div>\r\n    <div class=\"created\">\r\n        Erstellt von: {{creator}}\r\n    </div>\r\n</div>\r\n\r\n<div class=\"card\">\r\n\r\n    <div class=\"header-table header\">\r\n        <table style=\"width: 100%;\">\r\n            <tr>\r\n                <td>\r\n                    <h3 class=\"title\">Kommentare</h3>\r\n                </td>\r\n                <td align=\"right\" *ngIf=\"IsUserLoggedIn == true\" >\r\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddComment()\" value=\"Kommentar hinzufügen\">\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n    \r\n    <div>\r\n        \r\n    </div>\r\n\r\n    <div class=\"card enty-container\">\r\n        <app-single-comment class=\"col-md-12\"\r\n        *ngFor=\"let c of Comments\"\r\n        text=\"{{c.text}}\"\r\n        creator=\"{{c.creator}}\"\r\n        id=\"{{c.id}}\"\r\n        (deleted)=\"commentDeleted()\"\r\n        (liked)=\"commentLiked()\"\r\n        (openEdit)=\"editComment($event)\"\r\n        ></app-single-comment>\r\n    </div>\r\n\r\n\r\n    <div class=\"popup\" *ngIf=\"IsAddCommentPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <comment-form  \r\n            (saved)=\"commentSaved()\"     \r\n            ></comment-form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"popup\" *ngIf=\"IsEditCommentPopupShown == true\">\r\n        <div class=\"popup-content\">\r\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\r\n            <comment-form\r\n                id=\"{{CommentToEdit.id}}\"\r\n                text=\"{{CommentToEdit.text}}\"\r\n            (saved)=\"commentSaved()\"\r\n            ></comment-form>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntryDetailComponent } from './entry-detail.component';\r\nimport { CommentFormComponent } from '../comment-form/comment-form.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SingleCommentComponent } from '../single-comment/single-comment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EntryDetailComponent, \r\n    CommentFormComponent,\r\n    SingleCommentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    EntryDetailComponent,\r\n    CommentFormComponent,\r\n    FormsModule,\r\n    SingleCommentComponent\r\n  ]\r\n})\r\nexport class EntryDetailModule { }","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Like } from 'src/app/shared/entities/like';\r\nimport { User } from 'src/app/shared/entities/user';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport { EntryService } from 'src/app/shared/services/entry.service';\r\n\r\n@Component({\r\n  selector: 'app-single-comment',\r\n  templateUrl: './single-comment.component.html',\r\n  styleUrls: ['./single-comment.component.css']\r\n})\r\nexport class SingleCommentComponent implements OnInit {\r\n\r\n  @Input(\"entry\")\r\n  public entry: number;\r\n\r\n  @Input(\"text\")\r\n  public text: string;\r\n\r\n  @Input(\"creator\")\r\n  public creator: string;\r\n\r\n  @Input(\"id\")\r\n  public id: number;\r\n\r\n  @Input(\"likes\")\r\n  public likes: number;\r\n\r\n  @Output(\"deleted\") CommentDeleted = new EventEmitter();\r\n\r\n  @Output(\"liked\") CommentLike = new EventEmitter();\r\n\r\n  @Output(\"openEdit\") CommentEdit = new EventEmitter<number>();\r\n\r\n  public IsSameUser: boolean;\r\n  public IsUser: boolean;\r\n  public IsLiked: boolean = false;\r\n  private like: Like;\r\n\r\n  constructor(private appStateService: AppstateService, private entryService: EntryService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.likes = 0;\r\n    const user: User = this.appStateService.GetUser();\r\n    this.IsSameUser = user !== null && user.userName === this.creator;\r\n    if(user == null) {\r\n      this.IsUser = false; \r\n    }else {\r\n      this.IsUser = true;\r\n\r\n      console.log(user.id);\r\n      console.log(this.id);\r\n      this.entryService.getLike(user.id, this.id).forEach(obj => {\r\n        obj.forEach(child => {\r\n        this.like = child;\r\n        this.IsLiked = true;\r\n        })\r\n      });\r\n    }\r\n\r\n    this.entryService.getLikesAll(this.id).forEach(obj => {\r\n      obj.forEach(child => {\r\n        this.likes = this.likes + 1;\r\n        console.log(this.likes);\r\n      })\r\n      console.log(this.likes);\r\n    });\r\n  \r\n    console.log('Anzahl Likes:');\r\n    console.log(this.likes);\r\n  }\r\n\r\n  public deleteComment()\r\n  {\r\n    this.entryService.deleteComment(this.id).subscribe((test)=> {\r\n      console.log(test);\r\n      this.CommentDeleted.next();\r\n    });\r\n  }\r\n\r\n  public editComment()\r\n  {\r\n    this.CommentEdit.next(this.id);\r\n  }\r\n\r\n  public likeComment()\r\n  {\r\n    const user: User = this.appStateService.GetUser();\r\n    const newLike: Like = {\r\n      comment: this.id,\r\n      id:null,\r\n      creator: user.userName,\r\n      creatorId: user.id\r\n    }\r\n    this.entryService.likeComment(newLike).subscribe((test)=> {\r\n      this.CommentLike.next();\r\n    });\r\n    console.log('LIKE');\r\n    console.log(this.id);\r\n  }\r\n\r\n  public unlikeComment()\r\n  {\r\n    this.entryService.unlikeComment(this.like.id).subscribe((test)=> {\r\n      console.log(test);\r\n      this.CommentLike.next();\r\n    });\r\n    console.log('UNLIKE');\r\n    console.log(this.id);\r\n  }\r\n\r\n}\r\n","<div class=\"single-card\" id=\"single-card\">\r\n    <div style=\"color:#666666;\"> \r\n        <div class=\"created\">\r\n            <p hidden>{{id}}</p>\r\n            {{creator}} hat kommentiert:\r\n        </div>\r\n        {{text}}\r\n        <p></p>\r\n        <p>Dieser Kommentar gefällt: {{likes}}</p>\r\n    </div>\r\n    <div class=\"single-entry-footer\" id=\"single-footer\">\r\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteComment()\">\r\n            <i class=\"ti-trash\"></i>\r\n        </div>\r\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editComment()\">\r\n            <i class=\"ti-pencil-alt\"></i>\r\n        </div>\r\n        <div class=\"like\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == false\" (click)=\"likeComment()\">\r\n            <i class=\"ti-thumb-up\"></i>\r\n        </div>\r\n        <div class=\"unlike\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == true\" (click)=\"unlikeComment()\">\r\n            <i class=\"ti-thumb-down\"></i>\r\n        </div>\r\n    </div>\r\n    \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n\r\n  ],\r\n  imports: [\r\n      CommonModule,\r\n      FormsModule\r\n  ],\r\n  exports: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../../shared/entities/userResponse';\r\nimport {UserService} from '../../shared/services/user.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.appstateService.IsUserLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  signInUser(): void {\r\n    const params = new HttpParams()\r\n      .set('username', this.username)\r\n      .set('password', this.password);\r\n\r\n    this.userService.getUser(params)\r\n      .subscribe(\r\n        (users: UserResponse[]) => {\r\n          // If user is not found show error message\r\n          if (users.length === 0) {\r\n            console.error('No user found');\r\n            this.showErrorDiv('User / Password combination not found');\r\n            return;\r\n          }\r\n          this.clearErrorDiv();\r\n          // Set user information in appstateService\r\n          this.appstateService.SetUser(users[0].id, users[0].username);\r\n          this.router.navigate(['/']);\r\n        },\r\n        (errResp) => {\r\n          console.error('Error loading user', errResp);\r\n        });\r\n  }\r\n\r\n  registerUser(): void {\r\n    const getParams = new HttpParams()\r\n      .set('username', this.username);\r\n\r\n    this.userService.getUser(getParams)\r\n      .subscribe(\r\n        (users: UserResponse[]) => {\r\n          // If user with same username is found, show error message\r\n          if (users.length > 0) {\r\n            console.error('Username already in use');\r\n            this.showErrorDiv('Username already in use');\r\n            return;\r\n          }\r\n\r\n          this.userService.addUser(this.username, this.password)\r\n            .subscribe(\r\n              (user: UserResponse) => {\r\n                this.clearErrorDiv();\r\n                // Set user information in appstateService\r\n                this.appstateService.SetUser(user.id, user.username);\r\n\r\n                this.router.navigate(['/']);\r\n              },\r\n              (errResp) => {\r\n                console.error('Error creating user', errResp);\r\n              });\r\n        },\r\n        (errResp) => {\r\n          console.error('Error loading user', errResp);\r\n        });\r\n  }\r\n\r\n  clearErrorDiv(): void {\r\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = '';\r\n    document.getElementById('errorDiv').classList.add('hidden');\r\n  }\r\n\r\n  showErrorDiv(message: string): void {\r\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = message;\r\n    document.getElementById('errorDiv').classList.remove('hidden');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n  <form #form=\"ngForm\" >\r\n    <h2>Please sign in</h2>\r\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\r\n    <input type=\"text\" id=\"inputUsername\" name=\"inputUsername\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\r\n    <div *ngIf=\"form?.controls['inputUsername']?.invalid && (form?.controls['inputUsername']?.dirty || form?.controls['inputUsername']?.touched)\"\r\n         class=\"alert alert-danger\">\r\n      <div *ngIf=\"form?.controls['inputUsername']?.errors.required\">\r\n        Username is required.\r\n      </div>\r\n    </div>\r\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n    <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" [(ngModel)]=\"password\"  class=\"form-control\" placeholder=\"Password\" required=\"\">\r\n    <div *ngIf=\"form?.controls['inputPassword']?.invalid && (form?.controls['inputPassword']?.dirty || form?.controls['inputPassword']?.touched)\"\r\n         class=\"alert alert-danger\">\r\n      <div *ngIf=\"form?.controls['inputPassword']?.errors.required\">\r\n        Password is required.\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"errorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"clearErrorDiv()\">&times;</span></button>\r\n      <p>User / Password combination not found</p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"signInUser()\"\r\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Sign in</button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"registerUser()\"\r\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Register</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from '../shared/entities/user';\r\nimport {Router} from '@angular/router';\r\nimport { AppstateService } from '../shared/services/appstate.service';\r\n\r\n@Component({\r\n    selector: 'app-navbar-cmp',\r\n    templateUrl: 'navbar.component.html'\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(public appstateService: AppstateService, private router: Router)\r\n    {\r\n\r\n    }\r\n\r\n    public isUserLoggedIn = false;\r\n    public UserName = '';\r\n\r\n    private userLoggedInSubscription: Subscription;\r\n    private sidebarVisible = false;\r\n\r\n    ngOnDestroy(): void {\r\n        this.userLoggedInSubscription.unsubscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.userLoggedInSubscription = this.appstateService.UserChanged.subscribe((value: User) => {\r\n            console.log(value);\r\n            this.isUserLoggedIn = value !== null && value.id !== 0;\r\n            this.UserName = value.userName;\r\n        });\r\n    }\r\n\r\n    sidebarToggle(): void {\r\n        const body = document.getElementsByTagName('body')[0];\r\n\r\n        if (this.sidebarVisible === false) {\r\n            body.classList.add('nav-open');\r\n            this.sidebarVisible = true;\r\n        } else {\r\n            this.sidebarVisible = false;\r\n            body.classList.remove('nav-open');\r\n        }\r\n    }\r\n\r\n    logOutUser(): void {\r\n      this.appstateService.SetUser(0, null);\r\n      this.router.navigate(['/login']);\r\n    }\r\n}\r\n","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" routerLink=\"/\">StackUnderStop</a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\">\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li *ngIf=\"isUserLoggedIn === false\">\r\n                    <a routerLink=\"/login\">\r\n                        <i class=\"ti-user\"></i>\r\n                        <p>Login/Register</p>\r\n                    </a>\r\n                </li>\r\n                <li *ngIf=\"isUserLoggedIn === true\" class=\"dropdown\">\r\n                  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ti-user\"></i> Hallo {{UserName}} <span class=\"caret\"></span></a>\r\n                  <ul class=\"dropdown-menu\">\r\n                    <li><a routerLink=\"/settings\">Settings</a></li>\r\n                    <li><a (click)=\"logOutUser()\">Log out</a></li>\r\n                  </ul>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../shared/services/user.service';\r\nimport {Router} from '@angular/router';\r\nimport {HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../shared/entities/userResponse';\r\nimport { AppstateService } from '../shared/services/appstate.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  passwordNew: string;\r\n  passwordNew2: string;\r\n\r\n  deletionState = 0;\r\n\r\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.appstateService.IsUserLoggedIn()) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n    // Check if both password values match\r\n    if (this.passwordNew !== this.passwordNew2) {\r\n      this.showMessageDiv('passwordErrorDiv', 'The two password values must match');\r\n      return;\r\n    }\r\n\r\n    const curUser = this.appstateService.GetUser();\r\n\r\n    const params = new HttpParams()\r\n      .set('username', curUser.userName)\r\n      .set('password', this.passwordNew);\r\n\r\n    this.userService.updateUser(curUser.id, params)\r\n      .subscribe(\r\n        (user: UserResponse) => {\r\n          this.showMessageDiv('passwordSuccessDiv');\r\n          console.log(user);\r\n        },\r\n        (errResp) => {\r\n          console.error('Error creating user', errResp);\r\n        });\r\n  }\r\n\r\n  deleteAccount(): void {\r\n    console.log('delete start');\r\n    this.userService.deleteUser(this.appstateService.GetUser().id)\r\n      .subscribe(\r\n        (user: UserResponse) => {\r\n          console.log(user);\r\n          this.appstateService.SetUser(0, null);\r\n          this.router.navigate(['/login']);\r\n        },\r\n        (errResp) => {\r\n          console.error('Error deleting user', errResp);\r\n        });\r\n  }\r\n\r\n  increaseDeletionState(): void  {\r\n    this.deletionState++;\r\n  }\r\n  resetDeletionState(): void {\r\n    this.deletionState = 0;\r\n  }\r\n\r\n  hideMessageDiv(elementId: string, doClearDiv: boolean = false): void {\r\n    if (doClearDiv){\r\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = '';\r\n    }\r\n    document.getElementById(elementId).classList.add('hidden');\r\n  }\r\n\r\n  showMessageDiv(elementId: string, message: string = null): void {\r\n    if (message) {\r\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = message;\r\n    }\r\n    document.getElementById(elementId).classList.remove('hidden');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h2>Settings</h2>\r\n\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">Password</div>\r\n    <div class=\"panel-body\">\r\n      <form #form=\"ngForm\" >\r\n        <label for=\"inputNewPassword\" class=\"sr-only\">Username</label>\r\n        <input type=\"password\" id=\"inputNewPassword\" name=\"inputNewPassword\" [(ngModel)]=\"passwordNew\" class=\"form-control\" placeholder=\"New password\" required=\"\" autofocus=\"\" appNewPassword>\r\n        <label for=\"inputNewPassword2\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"inputNewPassword2\" name=\"inputNewPassword2\" [(ngModel)]=\"passwordNew2\" class=\"form-control\" placeholder=\"Repeat new password\" required=\"\">\r\n        <div id=\"passwordErrorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordErrorDiv', true)\">&times;</span></button>\r\n          <p>User / Password combination not found</p>\r\n        </div>\r\n        <div id=\"passwordSuccessDiv\" class=\"alert alert-success hidden\" role=\"alert\">\r\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordSuccessDiv')\">&times;</span></button>\r\n          <p>Password successfully updated</p>\r\n        </div>\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"changePassword()\"\r\n                [disabled]=\"form?.controls['inputNewPassword']?.invalid || form?.controls['inputNewPassword2']?.invalid\">Change password</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">Account</div>\r\n    <div *ngIf=\"deletionState==0\" class=\"panel-body\">\r\n      <div class=\"col-md-8\">Willst du deinen kompletten account löschen?</div>\r\n      <div class=\"col-md-4\"><button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Account löschen</button></div>\r\n    </div>\r\n    <div *ngIf=\"deletionState==1\" class=\"panel-body\">\r\n      <div class=\"col-md-8\">Bist du dir sicher?</div>\r\n      <div class=\"col-md-4\">\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Ja</button>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"deletionState==2\" class=\"panel-body\">\r\n      <div class=\"col-md-8\">Komm schon! Bist du dir wirklich sicher?</div>\r\n      <div class=\"col-md-4\">\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\r\n        <button class=\"btn btn-primary pull-right\" (click)=\"deleteAccount()\">JA!!</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {User} from '../../shared/entities/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppstateService {\r\n\r\n  public UserChanged = new EventEmitter();\r\n\r\n  private readonly UserBehavior = new BehaviorSubject<User>(null);\r\n\r\n  public IsUserLoggedIn(): boolean\r\n  {\r\n    const user: User = this.GetUser();\r\n    return user !== null && user.id !== 0;\r\n  }\r\n\r\n  public GetUser(): User\r\n  {\r\n    return this.UserBehavior.getValue();\r\n  }\r\n\r\n  public SetUser(userId: number, name: string): void\r\n  {\r\n    const value: User = {\r\n      id : userId,\r\n      userName : name\r\n    };\r\n    this.UserBehavior.next(value);\r\n    this.UserChanged.next(value);\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\r\nimport { Entry } from '../../shared/entities/entry';\r\nimport { ForumService } from './forum.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DefaultForumService implements ForumService {\r\n  private BaseUrl:string = \"http://localhost:3000/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getBlacklistedItems(): Observable<BlacklistItem[]> {\r\n    let url = this.BaseUrl+'blacklist';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.get<BlacklistItem[]>(url, {headers});\r\n  }\r\n  upateEntry(entry: Entry): Observable<object> {\r\n    let url = this.BaseUrl+'entries/'+entry.id;\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.put(url, entry,{headers});\r\n  }\r\n  addEntry(entry: Entry): Observable<object> {\r\n    let url = this.BaseUrl+'entries';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.post(url, entry,{headers});\r\n  }\r\n\r\n  getEntries(): Observable<Entry[]> {\r\n    let url = this.BaseUrl+'entries';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<Entry[]>(url, {headers});\r\n  }\r\n\r\n  deleteEntry(id:number): Observable<object>\r\n  {\r\n    let url = this.BaseUrl+\"entries/\"+id;\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.delete(url, {headers});\r\n  }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Comment } from '../entities/comment';\r\nimport { Like } from '../entities/like';\r\nimport { Observable } from 'rxjs';\r\nimport { CommentFormComponent } from '../../entry-detail/comment-form/comment-form.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntryService {\r\n  private BaseUrl:string = \"http://localhost:3000/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  upateComment(comment: Comment): Observable<object> {\r\n    let url = this.BaseUrl+'comments/'+comment.id;\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.put(url, comment,{headers});\r\n  }\r\n  addComment(comment: Comment): Observable<object> {\r\n    let url = this.BaseUrl+'comments';\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.post(url, comment,{headers});\r\n  }\r\n\r\n  getComment(entry_id: number): Observable<Comment[]> {\r\n    let url = this.BaseUrl+'comments?entry='+entry_id;\r\n\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<Comment[]>(url, {headers});\r\n  }\r\n\r\n  getLike(user_id: number, commend_id: number): Observable<Like[]> {\r\n    let url = this.BaseUrl+'likes?comment='+commend_id+'&creatorId='+user_id;\r\n    console.log(url);\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<Like[]>(url, {headers});\r\n  }\r\n\r\n  getLikesAll(commend_id: number): Observable<Like[]> {\r\n    let url = this.BaseUrl+'likes?comment='+commend_id;\r\n    console.log(url);\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<Like[]>(url, {headers});\r\n  }\r\n\r\n  likeComment(like: Like){\r\n    let url = this.BaseUrl+'likes';\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n    return this.http.post(url, like,{headers});\r\n  }\r\n\r\n  unlikeComment(id: number){\r\n    let url = this.BaseUrl+\"likes/\"+id;\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.delete(url, {headers});\r\n  }\r\n\r\n  deleteComment(id:number): Observable<object>\r\n  {\r\n    let url = this.BaseUrl+\"comments/\"+id;\r\n    let headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.delete(url, {headers});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entry } from '../../shared/entities/entry';\r\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\r\nimport {DefaultForumService} from './defaultforum.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  useClass: DefaultForumService\r\n})\r\nexport abstract class ForumService {\r\n\r\n  constructor() { }\r\n\r\n  abstract getEntries(): Observable<Entry[]>;\r\n\r\n  abstract addEntry(entry: Entry): Observable<object>;\r\n  \r\n  abstract upateEntry(entry: Entry): Observable<object>;\r\n\r\n  abstract deleteEntry(id:number): Observable<object>;\r\n\r\n  abstract getBlacklistedItems(): Observable<BlacklistItem[]>;  \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {UserResponse} from '../../shared/entities/userResponse';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  url: string;\r\n  headers: HttpHeaders;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.url = 'http://localhost:3000/users';\r\n  }\r\n\r\n\r\n  getUser(params: HttpParams): Observable<UserResponse[]> {\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Accept', 'application/json');\r\n\r\n    return this.http.get<UserResponse[]>(this.url, {headers, params});\r\n  }\r\n\r\n  addUser(username: string, password: string): Observable<UserResponse> {\r\n    const newUser = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    return this.http.post<UserResponse>(this.url, newUser);\r\n  }\r\n\r\n  updateUser(userId: number, params: HttpParams): Observable<UserResponse>  {\r\n    return this.http.put<UserResponse>(this.url + '/' + userId, params);\r\n  }\r\n\r\n  deleteUser(userId: number): Observable<UserResponse> {\r\n    return this.http.delete<UserResponse>(this.url + '/' + userId);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NewPasswordDirective } from './validation/new-password.directive';\r\nimport {CensorshipValidatorDirective} from './validation/censorship-validator.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NewPasswordDirective,\r\n    CensorshipValidatorDirective\r\n  ],\r\n  exports: [\r\n    NewPasswordDirective,\r\n    CensorshipValidatorDirective\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Directive } from '@angular/core';\r\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { ForumService } from '../services/forum.service';\r\n\r\n@Directive({\r\n  selector: '[censorship]',\r\n  providers: [{\r\n    provide: NG_ASYNC_VALIDATORS,\r\n    useExisting: CensorshipValidatorDirective,\r\n    multi: true\r\n  }]\r\n})\r\nexport class CensorshipValidatorDirective implements AsyncValidator {\r\n\r\n  constructor(private forumService: ForumService) { }\r\n  validate(control: AbstractControl): Promise<ValidationErrors> | Observable<ValidationErrors> {\r\n    console.log(\"I'm in\");\r\n    this.forumService.getBlacklistedItems().subscribe((response) =>\r\n    {\r\n      let text:string = control.value;\r\n      response.forEach(element => {\r\n        if(text.indexOf(element.value) !== -1)\r\n        {\r\n          return {\r\n            blacklist:{\r\n              valid: false\r\n            }\r\n          };\r\n        }\r\n      });\r\n    })\r\n    return null;\r\n  }\r\n  registerOnValidatorChange?(fn: () => void): void {\r\n    \r\n  }\r\n\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors} from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appNewPassword]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: NewPasswordDirective,\r\n    multi: true\r\n  }]\r\n})\r\nexport class NewPasswordDirective {\r\n\r\n  constructor() { }\r\n\r\n  validate(c: AbstractControl): ValidationErrors | null {\r\n    const validCities: string[] = ['Hamburg', 'Graz'];\r\n    console.log(c.value);\r\n    if (c.value && validCities.indexOf(c.value) === -1) {\r\n      return {\r\n        city: {\r\n          actualValue: c.value,\r\n          validCities\r\n        }\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}