{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/entries/entries.component.ts","./src/app/dashboard/entries/entries.component.html","./src/app/dashboard/entry-form/entry-form.component.ts","./src/app/dashboard/entry-form/entry-form.component.html","./src/app/dashboard/single-entry/single-entry.component.ts","./src/app/dashboard/single-entry/single-entry.component.html","./src/app/entry-detail/comment-form/comment-form.component.ts","./src/app/entry-detail/comment-form/comment-form.component.html","./src/app/entry-detail/entry-detail/entry-detail.component.ts","./src/app/entry-detail/entry-detail/entry-detail.component.html","./src/app/entry-detail/entry-detail/entry-detail.module.ts","./src/app/entry-detail/single-comment/single-comment.component.ts","./src/app/entry-detail/single-comment/single-comment.component.html","./src/app/login/login.module.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/shared/services/appstate.service.ts","./src/app/shared/services/defaultforum.service.ts","./src/app/shared/services/entry.service.ts","./src/app/shared/services/forum.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validation/censorship-validator.directive.ts","./src/app/shared/validation/censorship_comment-validator.directive.ts","./src/app/shared/validation/new-password.directive.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { EntriesComponent } from './dashboard/entries/entries.component';\nimport { EntryDetailComponent } from './entry-detail/entry-detail/entry-detail.component';\nimport { LoginComponent } from './login/login/login.component';\nimport {SettingsComponent} from './settings/settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EntriesComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'entry/:id',\n    component: EntryDetailComponent\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forum',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n}\n","<div class=\"wrapper\">\n\n  <div class=\"main-panel\">\n      <app-navbar-cmp></app-navbar-cmp>\n\n      <router-outlet>\n\n      </router-outlet>\n  </div>\n\n</div>\n","import { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {LoginModule} from './login/login.module';\nimport {EntryDetailModule} from './entry-detail/entry-detail/entry-detail.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsComponent } from './settings/settings.component';\nimport {SharedModule} from './shared/shared.module';\n\n\n@NgModule({\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      DashboardModule,\n      LoginModule,\n      EntryDetailModule,\n      AppRoutingModule,\n      SharedModule\n   ],\n   declarations: [\n      AppComponent,\n      NavbarComponent,\n      SettingsComponent\n   ],\n   providers: [],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EntriesComponent } from './entries/entries.component';\nimport { SingleEntryComponent } from './single-entry/single-entry.component';\nimport { RouterModule } from '@angular/router';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    EntriesComponent,\n    SingleEntryComponent,\n    EntryFormComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  exports:[\n    EntriesComponent,\n    SingleEntryComponent,\n    EntryFormComponent,\n    FormsModule\n  ]\n})\nexport class DashboardModule { }\n","import {Entry} from '../../shared/entities/entry';\nimport {ForumService} from '../../shared/services/forum.service'\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounce, debounceTime } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-entries',\n  templateUrl: './entries.component.html',\n  styleUrls: ['./entries.component.css']\n})\nexport class EntriesComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    private ReadOnlyEntities: Array<Entry> = [];\n    public Entries: Array<Entry> = [];\n\n    public IsUserLoggedIn: boolean = false;\n\n    public IsAddEntryPopupShown = false;\n    public IsEditEntryPopupShown = false;\n    public EntryToEdit:Entry= null;\n\n    public searchTerm = new FormControl();\n\n    private searchTermSubscription: Subscription;\n\n    constructor(private forumSerivce: ForumService, private appstateService: AppstateService) {\n    }\n    ngOnDestroy(): void {\n      this.searchTermSubscription.unsubscribe();\n    }\n    ngAfterViewInit(): void {\n      this.searchTermSubscription = this.searchTerm.valueChanges.pipe(\n        debounceTime(600)\n      ).subscribe(x=> this.searchForEntries(x))\n    }\n\n    ngOnInit(): void { \n      this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\n      this.ReadEntries();\n    }\n\n    public showAddEntry()\n    {\n      if(!this.IsAddEntryPopupShown)\n      {\n        this.IsAddEntryPopupShown = true;\n      }\n    }\n\n    private searchForEntries(x:any)\n    {\n      console.log(x);\n      //this.Entries = this.ReadOnlyEntities.filter(x=> x.title.includes(this.searchTerm));\n    }\n\n    private ReadEntries()\n    {\n      this.forumSerivce.getEntries().subscribe((entries) => {\n        this.Entries = entries;\n        this.ReadOnlyEntities = entries;\n      })\n    }\n\n    public closePopup()\n    {\n      if(this.IsAddEntryPopupShown)\n      {\n        this.IsAddEntryPopupShown = false;\n      }\n\n      if(this.IsEditEntryPopupShown)\n      {\n        this.IsEditEntryPopupShown = false;\n      }\n    }\n\n    public entrySaved()\n    {\n      this.closePopup();\n      this.ReadEntries();\n    }\n\n    public entryDeleted()\n    {\n      this.ReadEntries();\n    }\n\n    public editEntry(event){\n\n      this.EntryToEdit = this.Entries.find(x=> x.id == event);\n      this.IsEditEntryPopupShown = true;\n    }\n\n}\n","<div class=\"card\">\n\n    <div class=\"header-table header\">\n        <table style=\"width: 100%;\">\n            <tr>\n                <td>\n                    <h2 class=\"title\">Forum-Einträge</h2>\n                </td>\n                <td *ngIf=\"IsUserLoggedIn == true\" align=\"right\">\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddEntry()\" value=\"Eintrag hinzufügen\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n\n    <div class=\"card enty-container\">\n        <div class=\"search\">\n            <input [formControl]=\"searchTerm\" name=\"searchTerm\" class=\"form-control search-input\" placeholder=\"Suchen\">\n            <br>\n        </div>\n        <div *ngIf=\"Entries.length === 0\">\n            Leider wurden keine Ergebnisse gefunden!\n        </div>\n        <single-entry class=\"col-md-4 col-sm-4 col-lg-4 col-xs-6\"\n        *ngFor=\"let e of Entries\"\n        title=\"{{e.title}}\"\n        text=\"{{e.text}}\"\n        creator=\"{{e.creator}}\"\n        id=\"{{e.id}}\"\n        (deleted)=\"entryDeleted()\"\n        (openEdit)=\"editEntry($event)\"\n        ></single-entry>\n    </div>\n\n\n    <div class=\"popup\" *ngIf=\"IsAddEntryPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <entry-form\n            (saved)=\"entrySaved()\"\n            ></entry-form>\n        </div>\n    </div>\n\n    <div class=\"popup\" *ngIf=\"IsEditEntryPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <entry-form\n                id=\"{{EntryToEdit.id}}\"\n                title=\"{{EntryToEdit.title}}\"\n                text=\"{{EntryToEdit.text}}\"\n            (saved)=\"entrySaved()\"\n            ></entry-form>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { CensorshipValidatorDirective } from 'src/app/shared/validation/censorship-validator.directive';\nimport { Entry } from '../../shared/entities/entry';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { ForumService } from '../../shared/services/forum.service';\n\n\n@Component({\n  selector: 'entry-form',\n  templateUrl: './entry-form.component.html',\n  styleUrls: ['./entry-form.component.css']\n})\nexport class EntryFormComponent implements OnInit {\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"title\")\n  public title;\n\n  @Input(\"text\")\n  public text;\n\n  @Output(\"saved\") EntrySaved = new EventEmitter();\n\n  constructor(private forumService: ForumService, private appstateService: AppstateService) { \n  }\n\n  ngOnInit(): void {\n  }\n\n  public save()\n  {\n    const user: User = this.appstateService.GetUser();\n    if(this.id !== null && this.id !== undefined)\n    {\n      const newEntry: Entry = {\n        id:this.id,\n        title: this.title,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n      this.forumService.upateEntry(newEntry).subscribe((test)=> {\n        console.log(test);\n        this.EntrySaved.next(newEntry);\n      });\n    }\n    else\n    {\n      const newEntry: Entry = {\n        id:null,\n        title: this.title,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n  \n      this.forumService.addEntry(newEntry).subscribe((test)=> {\n        console.log(test);\n        this.EntrySaved.next(newEntry);\n      });\n    }\n  }\n\n}\n","<h2 style=\"margin-top: 0px;\">Neuen Eintrag hinzufügen</h2>\n\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label>Titel:</label>\n        <input [(ngModel)]=\"title\" name=\"title\" class=\"entry-input form-control\" type=\"text\" censorship required>\n    </div>\n    <div *ngIf=\"form?.controls['title']?.touched === true\">\n        <div *ngIf=\"form?.controls['title']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Titel ist ein Pflichtfeld\n        </div>\n\n        <div *ngIf=\"form?.controls['title']?.hasError('censorship') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Text:</label>\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\" required censorship></textarea>\n    </div>\n    <div *ngIf=\"form?.controls['text']?.touched === true\">\n        <div *ngIf=\"form?.controls['text']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Text ist ein Pflichtfeld\n        </div>\n        <div *ngIf=\"form?.controls['text']?.hasError('censorship') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n    <button\n        [disabled]=\"!title || !text || !form.valid\"\n        (click)=\"save()\"\n        class=\"btn btn-default\">Speichern</button>\n</form>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport { ForumService } from 'src/app/shared/services/forum.service';\n\n@Component({\n  selector: 'single-entry',\n  templateUrl: './single-entry.component.html',\n  styleUrls: ['./single-entry.component.css']\n})\nexport class SingleEntryComponent implements OnInit {\n\n  @Input(\"title\")\n  public title: string;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Output(\"deleted\") EntryDeleted = new EventEmitter();\n\n  @Output(\"openEdit\") EntryEdit = new EventEmitter<number>();\n\n  public IsSameUser: boolean;\n\n  constructor(private appStateService: AppstateService, private forumService: ForumService) { }\n\n  ngOnInit(): void {\n    const user: User = this.appStateService.GetUser();\n    this.IsSameUser = user !== null && user.userName === this.creator;\n  }\n\n  public deleteEntry()\n  {\n    this.forumService.deleteEntry(this.id).subscribe((test)=> {\n      console.log(test);\n      this.EntryDeleted.next();\n    });\n\n\n  }\n\n  public editEntry()\n  {\n    this.EntryEdit.next(this.id);\n  }\n\n  /*@HostListener('window:resize')\n  windowSizeChanged()\n  {\n    var card = document.getElementById(\"single-card\");\n    this.footerWidth = card.offsetWidth+\"px;\";\n    console.log(this.footerWidth);\n  }*/\n\n}\n\n","<div class=\"single-card\" id=\"single-card\">\n    <a [routerLink]=\"['/entry',id]\">\n    <div>\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\n    </div>\n    <div style=\"color:#666666;\"> \n        {{text}}\n    </div>\n    </a>\n    <div class=\"single-entry-footer\">\n        <div class=\"created\">\n            Erstellt von: {{creator}}\n        </div>\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteEntry()\">\n            <i class=\"ti-trash\"></i>\n        </div>\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editEntry()\">\n            <i class=\"ti-pencil-alt\"></i>\n        </div>\n    </div>\n    \n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { User } from '../../shared/entities/user';\nimport { EntryService } from '../../shared/services/entry.service';\nimport { Comment } from '../../shared/entities/comment';\nimport { CensorshipCommentValidatorDirective } from 'src/app/shared/validation/censorship_comment-validator.directive';\n\n@Component({\n  selector: 'comment-form',\n  templateUrl: './comment-form.component.html',\n  styleUrls: ['./comment-form.component.css']\n})\nexport class CommentFormComponent implements OnInit {\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Output(\"saved\") CommentSaved = new EventEmitter();\n\n  constructor(private appstateService: AppstateService, private entryService: EntryService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => {\n        this.entry = Number(params.get('id'));\n        console.log(this.entry);\n      }\n    );\n  }\n\n  public save()\n  {\n    const user: User = this.appstateService.GetUser();\n    if(this.id !== null && this.id !== undefined)\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id: this.id,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n      this.entryService.upateComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }\n    else\n    {\n      const newComment: Comment = {\n        entry: this.entry,\n        id:null,\n        text: this.text,\n        creator: user.userName,\n        creatorId: user.id\n      }\n  \n      this.entryService.addComment(newComment).subscribe((test)=> {\n        console.log(test);\n        this.CommentSaved.next(newComment);\n      });\n    }    \n  }\n}\n","<h2 style=\"margin-top: 0px;\">Kommentar hinzufügen</h2>\n\n<form #form=\"ngForm\">\n    <div class=\"form-group\">\n        <label>Text:</label>\n        <textarea [(ngModel)]=\"text\" name=\"text\" class=\"entry-input form-control\" type=\"text\" rows=\"10\" required censorship_comment></textarea>\n    </div>\n\n    <div *ngIf=\"form?.controls['text']?.touched === true\">\n        <div *ngIf=\"form?.controls['text']?.hasError('required') === true\" class=\"alert alert-danger\">\n            Text ist ein Pflichtfeld\n        </div>\n        <div *ngIf=\"form?.controls['text']?.hasError('censorship_comment') === true\" class=\"alert alert-danger\">\n            Bitte drücke dich etwas besser aus. #GoodVibesOnly\n        </div>\n    </div>\n\n    <button\n        [disabled]=\"!text || !form.valid\"\n        (click)=\"save()\"\n        class=\"btn btn-default\">Speichern</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { EntryService } from '../../shared/services/entry.service'\nimport { Comment } from '../../shared/entities/comment';\nimport { Entry } from '../../shared/entities/entry';\nimport { ForumService } from '../../shared/services/forum.service';\n\n@Component({\n  selector: 'app-entry-detail',\n  templateUrl: './entry-detail.component.html',\n  styleUrls: ['./entry-detail.component.css']\n})\nexport class EntryDetailComponent implements OnInit {\n\n  @Input(\"title\")\n  public title: string;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  private entry_id: number;\n  public entry: Entry;\n  public IsUserLoggedIn: boolean = false;\n  public IsAddCommentPopupShown: boolean = false;\n  public IsEditCommentPopupShown: boolean = false;\n  public CommentToEdit:Comment= null;\n\n  public IsEditEntryPopupShown = false;\n\n  public Comments: Array<Comment> = [];\n\n  constructor(private route: ActivatedRoute, private appstateService: AppstateService, private entryService: EntryService, private forumSerivce: ForumService) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(\n      params => {\n        this.entry_id = Number(params.get('id'));\n        console.log(this.entry_id);\n      }\n    );\n\n    this.forumSerivce.getEntries().forEach(obj => {\n      obj.forEach(child =>{\n        if( child.id == this.entry_id ){\n          this.entry = child;\n          this.title = this.entry.title;\n          this.text = this.entry.text;\n          this.creator = this.entry.creator;\n        }\n      })      \n    });\n\n    this.IsUserLoggedIn = this.appstateService.IsUserLoggedIn();\n\n    this.ReadComments();\n    \n  }\n\n  public showAddComment()\n  {\n    if(!this.IsAddCommentPopupShown)\n    {\n      this.IsAddCommentPopupShown = true;\n    }\n  }\n\n  private ReadComments()\n  {\n    this.entryService.getComment(this.entry_id).subscribe((comments) => {\n      this.Comments = comments;\n    })\n  }\n\n  public closePopup()\n  {\n    if(this.IsAddCommentPopupShown)\n    {\n      this.IsAddCommentPopupShown = false;\n    }\n\n    if(this.IsEditCommentPopupShown)\n    {\n      this.IsEditCommentPopupShown = false;\n    }\n  }\n\n  public commentSaved()\n  {\n    this.closePopup();\n    this.ReadComments();\n  }\n\n  public commentDeleted()\n    {\n      this.ReadComments();\n    }\n\n  public commentLiked()\n  {\n    this.ReadComments();\n  }\n\n  public editComment(event){\n\n    this.CommentToEdit = this.Comments.find(x=> x.id == event);\n    this.IsEditCommentPopupShown = true;\n  }\n\n}\n","\n<div class=\"single-card\" id=\"single-card\">\n    <div>\n        <h2 style=\"margin-top:1px;\">{{title}}</h2>\n    </div>\n    <div style=\"color:#666666;\"> \n        {{text}}\n        <p></p>\n    </div>\n    <div class=\"created\">\n        Erstellt von: {{creator}}\n    </div>\n</div>\n\n<div class=\"card\">\n\n    <div class=\"header-table header\">\n        <table style=\"width: 100%;\">\n            <tr>\n                <td>\n                    <h3 class=\"title\">Kommentare</h3>\n                </td>\n                <td align=\"right\" *ngIf=\"IsUserLoggedIn == true\" >\n                    <input class=\"btn btn-default\" type=\"button\" (click)=\"showAddComment()\" value=\"Kommentar hinzufügen\">\n                </td>\n            </tr>\n        </table>\n    </div>\n    \n    <div>\n        \n    </div>\n\n    <div class=\"card enty-container\">\n        <app-single-comment class=\"col-md-12\"\n        *ngFor=\"let c of Comments\"\n        text=\"{{c.text}}\"\n        creator=\"{{c.creator}}\"\n        id=\"{{c.id}}\"\n        (deleted)=\"commentDeleted()\"\n        (liked)=\"commentLiked()\"\n        (openEdit)=\"editComment($event)\"\n        ></app-single-comment>\n    </div>\n\n\n    <div class=\"popup\" *ngIf=\"IsAddCommentPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <comment-form  \n            (saved)=\"commentSaved()\"     \n            ></comment-form>\n        </div>\n    </div>\n\n    <div class=\"popup\" *ngIf=\"IsEditCommentPopupShown == true\">\n        <div class=\"popup-content\">\n            <div class=\"popup-close\" (click)=\"closePopup()\">&times;</div>\n            <comment-form\n                id=\"{{CommentToEdit.id}}\"\n                text=\"{{CommentToEdit.text}}\"\n            (saved)=\"commentSaved()\"\n            ></comment-form>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EntryDetailComponent } from './entry-detail.component';\nimport { CommentFormComponent } from '../comment-form/comment-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { SingleCommentComponent } from '../single-comment/single-comment.component';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    EntryDetailComponent, \n    CommentFormComponent,\n    SingleCommentComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule\n  ],\n  exports:[\n    EntryDetailComponent,\n    CommentFormComponent,\n    FormsModule,\n    SingleCommentComponent\n  ]\n})\nexport class EntryDetailModule { }","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Like } from '../../shared/entities/like';\nimport { User } from '../../shared/entities/user';\nimport { AppstateService } from '../../shared/services/appstate.service';\nimport { EntryService } from '../../shared/services/entry.service';\n\n@Component({\n  selector: 'app-single-comment',\n  templateUrl: './single-comment.component.html',\n  styleUrls: ['./single-comment.component.css']\n})\nexport class SingleCommentComponent implements OnInit {\n\n  @Input(\"entry\")\n  public entry: number;\n\n  @Input(\"text\")\n  public text: string;\n\n  @Input(\"creator\")\n  public creator: string;\n\n  @Input(\"id\")\n  public id: number;\n\n  @Input(\"likes\")\n  public likes: number;\n\n  @Output(\"deleted\") CommentDeleted = new EventEmitter();\n\n  @Output(\"liked\") CommentLike = new EventEmitter();\n\n  @Output(\"openEdit\") CommentEdit = new EventEmitter<number>();\n\n  public IsSameUser: boolean;\n  public IsUser: boolean;\n  public IsLiked: boolean = false;\n  private like: Like;\n\n  constructor(private appStateService: AppstateService, private entryService: EntryService) { }\n\n  ngOnInit(): void {\n    this.likes = 0;\n    const user: User = this.appStateService.GetUser();\n    this.IsSameUser = user !== null && user.userName === this.creator;\n    if(user == null) {\n      this.IsUser = false; \n    }else {\n      this.IsUser = true;\n\n      console.log(user.id);\n      console.log(this.id);\n      this.entryService.getLike(user.id, this.id).forEach(obj => {\n        obj.forEach(child => {\n        this.like = child;\n        this.IsLiked = true;\n        })\n      });\n    }\n\n    this.entryService.getLikesAll(this.id).forEach(obj => {\n      obj.forEach(child => {\n        this.likes = this.likes + 1;\n        console.log(this.likes);\n      })\n      console.log(this.likes);\n    });\n  \n    console.log('Anzahl Likes:');\n    console.log(this.likes);\n  }\n\n  public deleteComment()\n  {\n    this.entryService.deleteComment(this.id).subscribe((test)=> {\n      console.log(test);\n      this.CommentDeleted.next();\n    });\n  }\n\n  public editComment()\n  {\n    this.CommentEdit.next(this.id);\n  }\n\n  public likeComment()\n  {\n    const user: User = this.appStateService.GetUser();\n    const newLike: Like = {\n      comment: this.id,\n      id:null,\n      creator: user.userName,\n      creatorId: user.id\n    }\n    this.entryService.likeComment(newLike).subscribe((test)=> {\n      this.CommentLike.next();\n    });\n    console.log('LIKE');\n    console.log(this.id);\n  }\n\n  public unlikeComment()\n  {\n    this.entryService.unlikeComment(this.like.id).subscribe((test)=> {\n      console.log(test);\n      this.CommentLike.next();\n    });\n    console.log('UNLIKE');\n    console.log(this.id);\n  }\n\n}\n","<div class=\"single-card\" id=\"single-card\">\n    <div style=\"color:#666666;\"> \n        <div class=\"created\">\n            <p hidden>{{id}}</p>\n            {{creator}} hat kommentiert:\n        </div>\n        {{text}}\n        <p></p>\n        <p>Dieser Kommentar gefällt: {{likes}}</p>\n    </div>\n    <div class=\"single-entry-footer\" id=\"single-footer\">\n        <div class=\"delete\" *ngIf=\"IsSameUser == true\" (click)=\"deleteComment()\">\n            <i class=\"ti-trash\"></i>\n        </div>\n        <div class=\"edit\" *ngIf=\"IsSameUser == true\" (click)=\"editComment()\">\n            <i class=\"ti-pencil-alt\"></i>\n        </div>\n        <div class=\"like\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == false\" (click)=\"likeComment()\">\n            <i class=\"ti-thumb-up\"></i>\n        </div>\n        <div class=\"unlike\" *ngIf=\"IsUser == true && IsSameUser == false && IsLiked == true\" (click)=\"unlikeComment()\">\n            <i class=\"ti-thumb-down\"></i>\n        </div>\n    </div>\n    \n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoginComponent\n\n  ],\n  imports: [\n      CommonModule,\n      FormsModule\n  ],\n  exports: [\n    LoginComponent\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AppstateService } from 'src/app/shared/services/appstate.service';\nimport {HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../../shared/entities/userResponse';\nimport {UserService} from '../../shared/services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.appstateService.IsUserLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  signInUser(): void {\n    const params = new HttpParams()\n      .set('username', this.username)\n      .set('password', this.password);\n\n    this.userService.getUser(params)\n      .subscribe(\n        (users: UserResponse[]) => {\n          // If user is not found show error message\n          if (users.length === 0) {\n            console.error('No user found');\n            this.showErrorDiv('User / Password combination not found');\n            return;\n          }\n          this.clearErrorDiv();\n          // Set user information in appstateService\n          this.appstateService.SetUser(users[0].id, users[0].username);\n          this.router.navigate(['/']);\n        },\n        (errResp) => {\n          console.error('Error loading user', errResp);\n        });\n  }\n\n  registerUser(): void {\n    const getParams = new HttpParams()\n      .set('username', this.username);\n\n    this.userService.getUser(getParams)\n      .subscribe(\n        (users: UserResponse[]) => {\n          // If user with same username is found, show error message\n          if (users.length > 0) {\n            console.error('Username already in use');\n            this.showErrorDiv('Username already in use');\n            return;\n          }\n\n          this.userService.addUser(this.username, this.password)\n            .subscribe(\n              (user: UserResponse) => {\n                this.clearErrorDiv();\n                // Set user information in appstateService\n                this.appstateService.SetUser(user.id, user.username);\n\n                this.router.navigate(['/']);\n              },\n              (errResp) => {\n                console.error('Error creating user', errResp);\n              });\n        },\n        (errResp) => {\n          console.error('Error loading user', errResp);\n        });\n  }\n\n  clearErrorDiv(): void {\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = '';\n    document.getElementById('errorDiv').classList.add('hidden');\n  }\n\n  showErrorDiv(message: string): void {\n    document.getElementById('errorDiv').getElementsByTagName('p')[0].innerHTML = message;\n    document.getElementById('errorDiv').classList.remove('hidden');\n  }\n}\n","<div class=\"container\">\n\n  <form #form=\"ngForm\" >\n    <h2>Please sign in</h2>\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n    <input type=\"text\" id=\"inputUsername\" name=\"inputUsername\" [(ngModel)]=\"username\" class=\"form-control\" placeholder=\"Username\" required=\"\" autofocus=\"\">\n    <div *ngIf=\"form?.controls['inputUsername']?.invalid && (form?.controls['inputUsername']?.dirty || form?.controls['inputUsername']?.touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"form?.controls['inputUsername']?.errors.required\">\n        Username is required.\n      </div>\n    </div>\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" name=\"inputPassword\" [(ngModel)]=\"password\"  class=\"form-control\" placeholder=\"Password\" required=\"\">\n    <div *ngIf=\"form?.controls['inputPassword']?.invalid && (form?.controls['inputPassword']?.dirty || form?.controls['inputPassword']?.touched)\"\n         class=\"alert alert-danger\">\n      <div *ngIf=\"form?.controls['inputPassword']?.errors.required\">\n        Password is required.\n      </div>\n    </div>\n\n    <div id=\"errorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\n      <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"clearErrorDiv()\">&times;</span></button>\n      <p>User / Password combination not found</p>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"signInUser()\"\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Sign in</button>\n      </div>\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"registerUser()\"\n                [disabled]=\"form?.controls['inputUsername']?.invalid || form?.controls['inputPassword']?.invalid\">Register</button>\n      </div>\n    </div>\n  </form>\n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/entities/user';\nimport {Router} from '@angular/router';\nimport { AppstateService } from '../shared/services/appstate.service';\n\n@Component({\n    selector: 'app-navbar-cmp',\n    templateUrl: 'navbar.component.html'\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n    constructor(public appstateService: AppstateService, private router: Router)\n    {\n\n    }\n\n    public isUserLoggedIn = false;\n    public UserName = '';\n\n    private userLoggedInSubscription: Subscription;\n    private sidebarVisible = false;\n\n    ngOnDestroy(): void {\n        this.userLoggedInSubscription.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.userLoggedInSubscription = this.appstateService.UserChanged.subscribe((value: User) => {\n            console.log(value);\n            this.isUserLoggedIn = value !== null && value.id !== 0;\n            this.UserName = value.userName;\n        });\n    }\n\n    sidebarToggle(): void {\n        const body = document.getElementsByTagName('body')[0];\n\n        if (this.sidebarVisible === false) {\n            body.classList.add('nav-open');\n            this.sidebarVisible = true;\n        } else {\n            this.sidebarVisible = false;\n            body.classList.remove('nav-open');\n        }\n    }\n\n    logOutUser(): void {\n      this.appstateService.SetUser(0, null);\n      this.router.navigate(['/login']);\n    }\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" routerLink=\"/\">StackUnderStop</a>\n        </div>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li *ngIf=\"isUserLoggedIn === false\">\n                    <a routerLink=\"/login\">\n                        <i class=\"ti-user\"></i>\n                        <p>Login/Register</p>\n                    </a>\n                </li>\n                <li *ngIf=\"isUserLoggedIn === true\" class=\"dropdown\">\n                  <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ti-user\"></i> Hallo {{UserName}} <span class=\"caret\"></span></a>\n                  <ul class=\"dropdown-menu\">\n                    <li><a routerLink=\"/settings\">Settings</a></li>\n                    <li><a (click)=\"logOutUser()\">Log out</a></li>\n                  </ul>\n                </li>\n            </ul>\n\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../shared/services/user.service';\nimport {Router} from '@angular/router';\nimport {HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../shared/entities/userResponse';\nimport { AppstateService } from '../shared/services/appstate.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  passwordNew: string;\n  passwordNew2: string;\n\n  deletionState = 0;\n\n  constructor(private appstateService: AppstateService, private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (!this.appstateService.IsUserLoggedIn()) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  changePassword(): void {\n    // Check if both password values match\n    if (this.passwordNew !== this.passwordNew2) {\n      this.showMessageDiv('passwordErrorDiv', 'The two password values must match');\n      return;\n    }\n\n    const curUser = this.appstateService.GetUser();\n\n    const params = new HttpParams()\n      .set('username', curUser.userName)\n      .set('password', this.passwordNew);\n\n    this.userService.updateUser(curUser.id, params)\n      .subscribe(\n        (user: UserResponse) => {\n          this.showMessageDiv('passwordSuccessDiv');\n          console.log(user);\n        },\n        (errResp) => {\n          console.error('Error creating user', errResp);\n        });\n  }\n\n  deleteAccount(): void {\n    console.log('delete start');\n    this.userService.deleteUser(this.appstateService.GetUser().id)\n      .subscribe(\n        (user: UserResponse) => {\n          console.log(user);\n          this.appstateService.SetUser(0, null);\n          this.router.navigate(['/login']);\n        },\n        (errResp) => {\n          console.error('Error deleting user', errResp);\n        });\n  }\n\n  increaseDeletionState(): void  {\n    this.deletionState++;\n  }\n  resetDeletionState(): void {\n    this.deletionState = 0;\n  }\n\n  hideMessageDiv(elementId: string, doClearDiv: boolean = false): void {\n    if (doClearDiv){\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = '';\n    }\n    document.getElementById(elementId).classList.add('hidden');\n  }\n\n  showMessageDiv(elementId: string, message: string = null): void {\n    if (message) {\n      document.getElementById(elementId).getElementsByTagName('p')[0].innerHTML = message;\n    }\n    document.getElementById(elementId).classList.remove('hidden');\n  }\n}\n","<div class=\"container\">\n  <h2>Settings</h2>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Password</div>\n    <div class=\"panel-body\">\n      <form #form=\"ngForm\" >\n        <label for=\"inputNewPassword\" class=\"sr-only\">Username</label>\n        <input type=\"password\" id=\"inputNewPassword\" name=\"inputNewPassword\" [(ngModel)]=\"passwordNew\" class=\"form-control\" placeholder=\"New password\" required=\"\" autofocus=\"\" appNewPassword>\n        <label for=\"inputNewPassword2\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputNewPassword2\" name=\"inputNewPassword2\" [(ngModel)]=\"passwordNew2\" class=\"form-control\" placeholder=\"Repeat new password\" required=\"\">\n        <div id=\"passwordErrorDiv\" class=\"alert alert-danger hidden\" role=\"alert\">\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordErrorDiv', true)\">&times;</span></button>\n          <p>User / Password combination not found</p>\n        </div>\n        <div id=\"passwordSuccessDiv\" class=\"alert alert-success hidden\" role=\"alert\">\n          <button type=\"button\" class=\"close\" aria-label=\"Close\"><span aria-hidden=\"true\" (click)=\"hideMessageDiv('passwordSuccessDiv')\">&times;</span></button>\n          <p>Password successfully updated</p>\n        </div>\n        <button class=\"btn btn-primary pull-right\" (click)=\"changePassword()\"\n                [disabled]=\"form?.controls['inputNewPassword']?.invalid || form?.controls['inputNewPassword2']?.invalid\">Change password</button>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Account</div>\n    <div *ngIf=\"deletionState==0\" class=\"panel-body\">\n      <div class=\"col-md-8\">Willst du deinen kompletten account löschen?</div>\n      <div class=\"col-md-4\"><button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Account löschen</button></div>\n    </div>\n    <div *ngIf=\"deletionState==1\" class=\"panel-body\">\n      <div class=\"col-md-8\">Bist du dir sicher?</div>\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\n        <button class=\"btn btn-primary pull-right\" (click)=\"increaseDeletionState()\">Ja</button>\n      </div>\n    </div>\n    <div *ngIf=\"deletionState==2\" class=\"panel-body\">\n      <div class=\"col-md-8\">Komm schon! Bist du dir wirklich sicher?</div>\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-primary pull-right\" (click)=\"resetDeletionState()\">Nein</button>\n        <button class=\"btn btn-primary pull-right\" (click)=\"deleteAccount()\">JA!!</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {User} from '../../shared/entities/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppstateService {\n\n  public UserChanged = new EventEmitter();\n\n  private readonly UserBehavior = new BehaviorSubject<User>(null);\n\n  public IsUserLoggedIn(): boolean\n  {\n    const user: User = this.GetUser();\n    return user !== null && user.id !== 0;\n  }\n\n  public GetUser(): User\n  {\n    return this.UserBehavior.getValue();\n  }\n\n  public SetUser(userId: number, name: string): void\n  {\n    const value: User = {\n      id : userId,\n      userName : name\n    };\n    this.UserBehavior.next(value);\n    this.UserChanged.next(value);\n  }\n\n  constructor() { }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\nimport { Entry } from '../../shared/entities/entry';\nimport { ForumService } from './forum.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultForumService implements ForumService {\n  private BaseUrl:string = \"http://localhost:3000/\";\n\n  constructor(private http: HttpClient) { }\n  getBlacklistedItems(): Observable<BlacklistItem[]> {\n    let url = this.BaseUrl+'blacklist';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.get<BlacklistItem[]>(url, {headers});\n  }\n  upateEntry(entry: Entry): Observable<object> {\n    let url = this.BaseUrl+'entries/'+entry.id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.put(url, entry,{headers});\n  }\n  addEntry(entry: Entry): Observable<object> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, entry,{headers});\n  }\n\n  getEntries(): Observable<Entry[]> {\n    let url = this.BaseUrl+'entries';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Entry[]>(url, {headers});\n  }\n\n  deleteEntry(id:number): Observable<object>\n  {\n    let url = this.BaseUrl+\"entries/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Comment } from '../entities/comment';\nimport { Like } from '../entities/like';\nimport { Observable } from 'rxjs';\nimport { CommentFormComponent } from '../../entry-detail/comment-form/comment-form.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntryService {\n  private BaseUrl:string = \"http://localhost:3000/\";\n\n  constructor(private http: HttpClient) { }\n\n  upateComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'comments/'+comment.id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.put(url, comment,{headers});\n  }\n  addComment(comment: Comment): Observable<object> {\n    let url = this.BaseUrl+'comments';\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, comment,{headers});\n  }\n\n  getComment(entry_id: number): Observable<Comment[]> {\n    let url = this.BaseUrl+'comments?entry='+entry_id;\n\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Comment[]>(url, {headers});\n  }\n\n  getLike(user_id: number, commend_id: number): Observable<Like[]> {\n    let url = this.BaseUrl+'likes?comment='+commend_id+'&creatorId='+user_id;\n    console.log(url);\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Like[]>(url, {headers});\n  }\n\n  getLikesAll(commend_id: number): Observable<Like[]> {\n    let url = this.BaseUrl+'likes?comment='+commend_id;\n    console.log(url);\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<Like[]>(url, {headers});\n  }\n\n  likeComment(like: Like){\n    let url = this.BaseUrl+'likes';\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n    return this.http.post(url, like,{headers});\n  }\n\n  unlikeComment(id: number){\n    let url = this.BaseUrl+\"likes/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n\n  deleteComment(id:number): Observable<object>\n  {\n    let url = this.BaseUrl+\"comments/\"+id;\n    let headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.delete(url, {headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Entry } from '../../shared/entities/entry';\nimport { BlacklistItem } from '../../shared/entities/blacklistItem';\nimport {DefaultForumService} from './defaultforum.service';\n\n@Injectable({\n  providedIn: 'root',\n  useClass: DefaultForumService\n})\nexport abstract class ForumService {\n\n  constructor() { }\n\n  abstract getEntries(): Observable<Entry[]>;\n\n  abstract addEntry(entry: Entry): Observable<object>;\n  \n  abstract upateEntry(entry: Entry): Observable<object>;\n\n  abstract deleteEntry(id:number): Observable<object>;\n\n  abstract getBlacklistedItems(): Observable<BlacklistItem[]>;  \n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {UserResponse} from '../../shared/entities/userResponse';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  url: string;\n  headers: HttpHeaders;\n\n  constructor(private http: HttpClient) {\n    this.url = 'http://localhost:3000/users';\n  }\n\n\n  getUser(params: HttpParams): Observable<UserResponse[]> {\n\n    const headers = new HttpHeaders()\n      .set('Accept', 'application/json');\n\n    return this.http.get<UserResponse[]>(this.url, {headers, params});\n  }\n\n  addUser(username: string, password: string): Observable<UserResponse> {\n    const newUser = {\n      username,\n      password\n    };\n\n    return this.http.post<UserResponse>(this.url, newUser);\n  }\n\n  updateUser(userId: number, params: HttpParams): Observable<UserResponse>  {\n    return this.http.put<UserResponse>(this.url + '/' + userId, params);\n  }\n\n  deleteUser(userId: number): Observable<UserResponse> {\n    return this.http.delete<UserResponse>(this.url + '/' + userId);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewPasswordDirective } from './validation/new-password.directive';\nimport {CensorshipValidatorDirective} from './validation/censorship-validator.directive';\nimport {CensorshipCommentValidatorDirective} from './validation/censorship_comment-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NewPasswordDirective,\n    CensorshipValidatorDirective,\n    CensorshipCommentValidatorDirective\n  ],\n  exports: [\n    NewPasswordDirective,\n    CensorshipValidatorDirective,\n    CensorshipCommentValidatorDirective\n  ]\n})\nexport class SharedModule { }\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { ForumService } from '../services/forum.service';\nimport {map} from 'rxjs/operators';\n\n@Directive({\n  selector: '[censorship]',\n  providers: [{\n    provide: NG_ASYNC_VALIDATORS,\n    useExisting: CensorshipValidatorDirective,\n    multi: true\n  }]\n})\nexport class CensorshipValidatorDirective implements AsyncValidator {\n\n  constructor(private forumService: ForumService) { }\n  validate(control: AbstractControl): Promise<ValidationErrors> | Observable<ValidationErrors> {\n    return this.forumService.getBlacklistedItems().pipe(map((response) =>\n    {\n      let text:string = control.value;\n      \n      let hasError: boolean;\n      for(let i = 0; i< response.length;i++)\n      {\n        if(text.includes(response[i].value))\n        {\n          return {'censorship':true};\n        }\n      }\n      return null;\n    }));\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    \n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { ForumService } from '../services/forum.service';\nimport { map } from 'rxjs/operators';\n\n@Directive({\n  selector: '[censorship_comment]',\n  providers: [{\n    provide: NG_ASYNC_VALIDATORS,\n    useExisting: CensorshipCommentValidatorDirective,\n    multi: true\n  }]\n})\nexport class CensorshipCommentValidatorDirective implements AsyncValidator {\n  constructor(private forumService: ForumService) { }\n  validate(control: AbstractControl): Promise<ValidationErrors> | Observable<ValidationErrors> {\n    return this.forumService.getBlacklistedItems().pipe(map((response) =>\n    {\n      let text:string = control.value;\n      \n      let hasError: boolean;\n      for(let i = 0; i< response.length;i++)\n      {\n        if(text.includes(response[i].value))\n        {\n          return {'censorship_comment':true};\n        }\n      }\n      return null;\n    }));\n  }\n  registerOnValidatorChange?(fn: () => void): void {\n    \n  }\n\n}\n","import { Directive } from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS, ValidationErrors} from '@angular/forms';\n\n@Directive({\n  selector: '[appNewPassword]',\n  providers: [{\n    provide: NG_VALIDATORS,\n    useExisting: NewPasswordDirective,\n    multi: true\n  }]\n})\nexport class NewPasswordDirective {\n\n  constructor() { }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const validCities: string[] = ['Hamburg', 'Graz'];\n    console.log(c.value);\n    if (c.value && validCities.indexOf(c.value) === -1) {\n      return {\n        city: {\n          actualValue: c.value,\n          validCities\n        }\n      };\n    }\n    return null;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}